
Eindopdracht_Signaalverwerking.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001be8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000070  00802000  00001be8  00001c7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000fc  00802070  00802070  00001cec  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001cec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d48  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000059c7  00000000  00000000  00001e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003807  00000000  00000000  0000785f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d74  00000000  00000000  0000b066  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f4  00000000  00000000  0000bddc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000458c  00000000  00000000  0000c1d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d96  00000000  00000000  0001075c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000114f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 01 	jmp	0x306	; 0x306 <__ctors_end>
       4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
       8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
       c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      10:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      14:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      18:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      1c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      20:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      24:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      28:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      2c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      30:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      34:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      38:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      3c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      40:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      44:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      48:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      4c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      50:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      54:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      58:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      5c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      60:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      64:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      68:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      6c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      70:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      74:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      78:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      7c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      80:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      84:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      88:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      8c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      90:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      94:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      98:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      9c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ac:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      b8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      dc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
      fc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     100:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     104:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     108:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     10c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     110:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     114:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     118:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     11c:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__vector_71>
     120:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     124:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     128:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     12c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     130:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     134:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     138:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     13c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     140:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     144:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     148:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     14c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     150:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     154:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     158:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     15c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     160:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     164:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     168:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     16c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     170:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     174:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     178:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     17c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     180:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     184:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     188:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     18c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     190:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     194:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     198:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     19c:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1a8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ac:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1b8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1bc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1c8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1cc:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1d8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1dc:	0c 94 af 05 	jmp	0xb5e	; 0xb5e <__vector_119>
     1e0:	0c 94 d7 05 	jmp	0xbae	; 0xbae <__vector_120>
     1e4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1e8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1ec:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f0:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>
     1f8:	0c 94 a4 01 	jmp	0x348	; 0x348 <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 8d 04 	jmp	0x91a	; 0x91a <uartF0_fputc>
     200:	0c 94 4d 04 	jmp	0x89a	; 0x89a <uartF0_fgetc>

00000204 <__trampolines_end>:
     204:	6e 61       	ori	r22, 0x1E	; 30
     206:	6e 00       	.word	0x006e	; ????

00000208 <__c.2332>:
     208:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     218:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     228:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     238:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     248:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     258:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     268:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     278:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     288:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     298:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2a8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2b8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2c8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2d8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2e8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2f8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000306 <__ctors_end>:
     306:	11 24       	eor	r1, r1
     308:	1f be       	out	0x3f, r1	; 63
     30a:	cf ef       	ldi	r28, 0xFF	; 255
     30c:	cd bf       	out	0x3d, r28	; 61
     30e:	df e5       	ldi	r29, 0x5F	; 95
     310:	de bf       	out	0x3e, r29	; 62
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	0c bf       	out	0x3c, r16	; 60

00000316 <__do_copy_data>:
     316:	10 e2       	ldi	r17, 0x20	; 32
     318:	a0 e0       	ldi	r26, 0x00	; 0
     31a:	b0 e2       	ldi	r27, 0x20	; 32
     31c:	e8 ee       	ldi	r30, 0xE8	; 232
     31e:	fb e1       	ldi	r31, 0x1B	; 27
     320:	00 e0       	ldi	r16, 0x00	; 0
     322:	0b bf       	out	0x3b, r16	; 59
     324:	02 c0       	rjmp	.+4      	; 0x32a <__do_copy_data+0x14>
     326:	07 90       	elpm	r0, Z+
     328:	0d 92       	st	X+, r0
     32a:	a0 37       	cpi	r26, 0x70	; 112
     32c:	b1 07       	cpc	r27, r17
     32e:	d9 f7       	brne	.-10     	; 0x326 <__do_copy_data+0x10>

00000330 <__do_clear_bss>:
     330:	21 e2       	ldi	r18, 0x21	; 33
     332:	a0 e7       	ldi	r26, 0x70	; 112
     334:	b0 e2       	ldi	r27, 0x20	; 32
     336:	01 c0       	rjmp	.+2      	; 0x33a <.do_clear_bss_start>

00000338 <.do_clear_bss_loop>:
     338:	1d 92       	st	X+, r1

0000033a <.do_clear_bss_start>:
     33a:	ac 36       	cpi	r26, 0x6C	; 108
     33c:	b2 07       	cpc	r27, r18
     33e:	e1 f7       	brne	.-8      	; 0x338 <.do_clear_bss_loop>
     340:	0e 94 b0 03 	call	0x760	; 0x760 <main>
     344:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <_exit>

00000348 <__bad_interrupt>:
     348:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000034c <Config32MHzClock_Ext16M>:
 *
 * \return void
 */
void Config32MHzClock_Ext16M(void)
{
  OSC.XOSCCTRL = OSC_FRQRANGE_12TO16_gc |                   // Select frequency range
     34c:	e0 e5       	ldi	r30, 0x50	; 80
     34e:	f0 e0       	ldi	r31, 0x00	; 0
     350:	8b ec       	ldi	r24, 0xCB	; 203
     352:	82 83       	std	Z+2, r24	; 0x02
                 OSC_XOSCSEL_XTAL_16KCLK_gc;                // Select start-up time
  OSC.CTRL |= OSC_XOSCEN_bm;                                // Enable oscillator
     354:	80 81       	ld	r24, Z
     356:	88 60       	ori	r24, 0x08	; 8
     358:	80 83       	st	Z, r24
  while ( ! (OSC.STATUS & OSC_XOSCRDY_bm) );                // Wait for oscillator is ready
     35a:	81 81       	ldd	r24, Z+1	; 0x01
     35c:	83 ff       	sbrs	r24, 3
     35e:	fd cf       	rjmp	.-6      	; 0x35a <Config32MHzClock_Ext16M+0xe>

  OSC.PLLCTRL = OSC_PLLSRC_XOSC_gc | (OSC_PLLFAC_gm & 2);   // Select PLL source and multipl. factor
     360:	e0 e5       	ldi	r30, 0x50	; 80
     362:	f0 e0       	ldi	r31, 0x00	; 0
     364:	82 ec       	ldi	r24, 0xC2	; 194
     366:	85 83       	std	Z+5, r24	; 0x05
  OSC.CTRL |= OSC_PLLEN_bm;                                 // Enable PLL
     368:	80 81       	ld	r24, Z
     36a:	80 61       	ori	r24, 0x10	; 16
     36c:	80 83       	st	Z, r24
  while ( ! (OSC.STATUS & OSC_PLLRDY_bm) );                 // Wait for PLL is ready
     36e:	81 81       	ldd	r24, Z+1	; 0x01
     370:	84 ff       	sbrs	r24, 4
     372:	fd cf       	rjmp	.-6      	; 0x36e <Config32MHzClock_Ext16M+0x22>

  CCP = CCP_IOREG_gc;                                       // Security signature to modify clock
     374:	88 ed       	ldi	r24, 0xD8	; 216
     376:	84 bf       	out	0x34, r24	; 52
  CLK.CTRL = CLK_SCLKSEL_PLL_gc;                            // Select system clock source
     378:	84 e0       	ldi	r24, 0x04	; 4
     37a:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x7be040>
  OSC.CTRL &= ~OSC_RC2MEN_bm;                               // Turn off 2MHz internal oscillator
     37e:	e0 e5       	ldi	r30, 0x50	; 80
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	80 81       	ld	r24, Z
     384:	8e 7f       	andi	r24, 0xFE	; 254
     386:	80 83       	st	Z, r24
  OSC.CTRL &= ~OSC_RC32MEN_bm;                              // Turn off 32MHz internal oscillator
     388:	80 81       	ld	r24, Z
     38a:	8d 7f       	andi	r24, 0xFD	; 253
     38c:	80 83       	st	Z, r24
     38e:	08 95       	ret

00000390 <init_timer>:
float a1[] = {a10, a11, a12};
float a2[] = {a20, a21};


void init_timer(void){
	TCE0.CTRLB     = TC_WGMODE_NORMAL_gc;	// Normal mode
     390:	e0 e0       	ldi	r30, 0x00	; 0
     392:	fa e0       	ldi	r31, 0x0A	; 10
     394:	11 82       	std	Z+1, r1	; 0x01
	TCE0.CTRLA     = TC_CLKSEL_DIV8_gc;	// prescaling 8 (N = 64)
     396:	84 e0       	ldi	r24, 0x04	; 4
     398:	80 83       	st	Z, r24
	//TCE0.INTCTRLA  = TC_OVFINTLVL_MED_gc;	// enable overflow interrupt medium level
	TCE0.PER       = TC_PER;	//(62499/2)*0.002;			// sampletijd ( (62499/2) = 1 sample/seconde).
     39a:	8f e9       	ldi	r24, 0x9F	; 159
     39c:	9f e0       	ldi	r25, 0x0F	; 15
     39e:	86 a3       	std	Z+38, r24	; 0x26
     3a0:	97 a3       	std	Z+39, r25	; 0x27
     3a2:	08 95       	ret

000003a4 <init_adc>:
}

void init_adc(void){
	PORTA.DIRCLR		= PIN2_bm|PIN3_bm;
     3a4:	8c e0       	ldi	r24, 0x0C	; 12
     3a6:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7be602>
	ADCA.CH0.MUXCTRL	= ADC_CH_MUXPOS_PIN2_gc |	// PA2 (PIN A2) to + channel 0
     3aa:	e0 e0       	ldi	r30, 0x00	; 0
     3ac:	f2 e0       	ldi	r31, 0x02	; 2
     3ae:	85 e1       	ldi	r24, 0x15	; 21
     3b0:	81 a3       	std	Z+33, r24	; 0x21
	ADC_CH_MUXNEG_GND_MODE3_gc;						// GND to - channel 0
	ADCA.CH0.CTRL	= ADC_CH_INPUTMODE_DIFF_gc;		// channel 0 differential mode
     3b2:	82 e0       	ldi	r24, 0x02	; 2
     3b4:	80 a3       	std	Z+32, r24	; 0x20
	ADCA.REFCTRL	= ADC_REFSEL_INTVCC_gc;
     3b6:	90 e1       	ldi	r25, 0x10	; 16
     3b8:	92 83       	std	Z+2, r25	; 0x02
	ADCA.CTRLB		= ADC_RESOLUTION_12BIT_gc |
     3ba:	91 83       	std	Z+1, r25	; 0x01
	ADC_CONMODE_bm;				// signed conversion
	ADCA.PRESCALER	= ADC_PRESCALER_DIV16_gc;
     3bc:	84 83       	std	Z+4, r24	; 0x04
	ADCA.EVCTRL		= ADC_SWEEP_0_gc |			// sweep channel 0
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	83 83       	std	Z+3, r24	; 0x03
	ADC_EVSEL_0123_gc |		// select event channel 0, 1, 2, 3
	ADC_EVACT_CH0_gc;			// event system triggers channel 0
	EVSYS.CH0MUX	= EVSYS_CHMUX_TCE0_OVF_gc;	// Timer overflow E0 event
     3c2:	90 ee       	ldi	r25, 0xE0	; 224
     3c4:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <__TEXT_REGION_LENGTH__+0x7be180>
	ADCA.CH0.INTCTRL	= ADC_CH_INTMODE_COMPLETE_gc | ADC_CH_INTLVL_LO_gc; // enable ADCA CH0 interrupt when conversion is complete
     3c8:	82 a3       	std	Z+34, r24	; 0x22
	ADCA.CTRLA		= ADC_ENABLE_bm;
     3ca:	80 83       	st	Z, r24
     3cc:	08 95       	ret

000003ce <init_dac>:
}

void init_dac(void){
	DACB.CTRLC = DAC_REFSEL_AVCC_gc;
     3ce:	e0 e2       	ldi	r30, 0x20	; 32
     3d0:	f3 e0       	ldi	r31, 0x03	; 3
     3d2:	88 e0       	ldi	r24, 0x08	; 8
     3d4:	82 83       	std	Z+2, r24	; 0x02
	DACB.CTRLB = DAC_CHSEL_SINGLE_gc;
     3d6:	11 82       	std	Z+1, r1	; 0x01
	DACB.CTRLA = DAC_CH0EN_bm | DAC_ENABLE_bm;
     3d8:	85 e0       	ldi	r24, 0x05	; 5
     3da:	80 83       	st	Z, r24
     3dc:	08 95       	ret

000003de <__vector_71>:
//}

volatile float y[2] = {0,0};
volatile int8_t yIndex = 0;

ISR(ADCA_CH0_vect){
     3de:	1f 92       	push	r1
     3e0:	0f 92       	push	r0
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	0f 92       	push	r0
     3e6:	11 24       	eor	r1, r1
     3e8:	0b b6       	in	r0, 0x3b	; 59
     3ea:	0f 92       	push	r0
     3ec:	2f 92       	push	r2
     3ee:	3f 92       	push	r3
     3f0:	4f 92       	push	r4
     3f2:	5f 92       	push	r5
     3f4:	7f 92       	push	r7
     3f6:	8f 92       	push	r8
     3f8:	9f 92       	push	r9
     3fa:	af 92       	push	r10
     3fc:	bf 92       	push	r11
     3fe:	cf 92       	push	r12
     400:	df 92       	push	r13
     402:	ef 92       	push	r14
     404:	ff 92       	push	r15
     406:	0f 93       	push	r16
     408:	1f 93       	push	r17
     40a:	2f 93       	push	r18
     40c:	3f 93       	push	r19
     40e:	4f 93       	push	r20
     410:	5f 93       	push	r21
     412:	6f 93       	push	r22
     414:	7f 93       	push	r23
     416:	8f 93       	push	r24
     418:	9f 93       	push	r25
     41a:	af 93       	push	r26
     41c:	bf 93       	push	r27
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	ef 93       	push	r30
     424:	ff 93       	push	r31
	PORTC.OUTTGL = PIN0_bm;	//Toggle the LED
     426:	81 e0       	ldi	r24, 0x01	; 1
     428:	80 93 47 06 	sts	0x0647, r24	; 0x800647 <__TEXT_REGION_LENGTH__+0x7be647>
	static float y[2] = {0, 0};
		
	static int8_t xIndex = 0;
// 	static int8_t yIndex = 0; //Wordt ook gebruikt voor x2.
	
	x0[xIndex] = (float)ADCA.CH0.RES;
     42c:	70 90 98 20 	lds	r7, 0x2098	; 0x802098 <xIndex.4109>
     430:	07 2d       	mov	r16, r7
     432:	07 2c       	mov	r0, r7
     434:	00 0c       	add	r0, r0
     436:	11 0b       	sbc	r17, r17
     438:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x7be224>
     43c:	70 91 25 02 	lds	r23, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x7be225>
     440:	e8 01       	movw	r28, r16
     442:	cc 0f       	add	r28, r28
     444:	dd 1f       	adc	r29, r29
     446:	cc 0f       	add	r28, r28
     448:	dd 1f       	adc	r29, r29
     44a:	9e 01       	movw	r18, r28
     44c:	24 57       	subi	r18, 0x74	; 116
     44e:	3f 4d       	sbci	r19, 0xDF	; 223
     450:	79 01       	movw	r14, r18
     452:	80 e0       	ldi	r24, 0x00	; 0
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	0e 94 16 07 	call	0xe2c	; 0xe2c <__floatunsisf>
     45a:	d7 01       	movw	r26, r14
     45c:	6d 93       	st	X+, r22
     45e:	7d 93       	st	X+, r23
     460:	8d 93       	st	X+, r24
     462:	9c 93       	st	X, r25
     464:	13 97       	sbiw	r26, 0x03	; 3
	x1[xIndex] = 0;
	
	// Eerste deel
	for(uint8_t i = 1; i < 3; i++) {
		x1[xIndex] += b1[2 - i] * x0[(xIndex - i) % 3];
     466:	78 01       	movw	r14, r16
     468:	b1 e0       	ldi	r27, 0x01	; 1
     46a:	eb 1a       	sub	r14, r27
     46c:	f1 08       	sbc	r15, r1
     46e:	c0 58       	subi	r28, 0x80	; 128
     470:	df 4d       	sbci	r29, 0xDF	; 223
     472:	c8 01       	movw	r24, r16
     474:	02 97       	sbiw	r24, 0x02	; 2
     476:	0f 2e       	mov	r0, r31
     478:	f3 e0       	ldi	r31, 0x03	; 3
     47a:	af 2e       	mov	r10, r31
     47c:	b1 2c       	mov	r11, r1
     47e:	f0 2d       	mov	r31, r0
     480:	b5 01       	movw	r22, r10
     482:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__divmodhi4>
     486:	fc 01       	movw	r30, r24
     488:	ee 0f       	add	r30, r30
     48a:	ff 1f       	adc	r31, r31
     48c:	ee 0f       	add	r30, r30
     48e:	ff 1f       	adc	r31, r31
     490:	e4 57       	subi	r30, 0x74	; 116
     492:	ff 4d       	sbci	r31, 0xDF	; 223
     494:	0f 2e       	mov	r0, r31
     496:	fc e0       	ldi	r31, 0x0C	; 12
     498:	cf 2e       	mov	r12, r31
     49a:	f0 e2       	ldi	r31, 0x20	; 32
     49c:	df 2e       	mov	r13, r31
     49e:	f0 2d       	mov	r31, r0
     4a0:	d6 01       	movw	r26, r12
     4a2:	2d 91       	ld	r18, X+
     4a4:	3d 91       	ld	r19, X+
     4a6:	4d 91       	ld	r20, X+
     4a8:	5c 91       	ld	r21, X
     4aa:	60 81       	ld	r22, Z
     4ac:	71 81       	ldd	r23, Z+1	; 0x01
     4ae:	82 81       	ldd	r24, Z+2	; 0x02
     4b0:	93 81       	ldd	r25, Z+3	; 0x03
     4b2:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     4b6:	1b 01       	movw	r2, r22
     4b8:	2c 01       	movw	r4, r24
     4ba:	c7 01       	movw	r24, r14
     4bc:	b5 01       	movw	r22, r10
     4be:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__divmodhi4>
     4c2:	fc 01       	movw	r30, r24
     4c4:	ee 0f       	add	r30, r30
     4c6:	ff 1f       	adc	r31, r31
     4c8:	ee 0f       	add	r30, r30
     4ca:	ff 1f       	adc	r31, r31
     4cc:	e4 57       	subi	r30, 0x74	; 116
     4ce:	ff 4d       	sbci	r31, 0xDF	; 223
     4d0:	d6 01       	movw	r26, r12
     4d2:	14 96       	adiw	r26, 0x04	; 4
     4d4:	2d 91       	ld	r18, X+
     4d6:	3d 91       	ld	r19, X+
     4d8:	4d 91       	ld	r20, X+
     4da:	5c 91       	ld	r21, X
     4dc:	17 97       	sbiw	r26, 0x07	; 7
     4de:	60 81       	ld	r22, Z
     4e0:	71 81       	ldd	r23, Z+1	; 0x01
     4e2:	82 81       	ldd	r24, Z+2	; 0x02
     4e4:	93 81       	ldd	r25, Z+3	; 0x03
     4e6:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     4ea:	20 e0       	ldi	r18, 0x00	; 0
     4ec:	30 e0       	ldi	r19, 0x00	; 0
     4ee:	a9 01       	movw	r20, r18
     4f0:	0e 94 09 06 	call	0xc12	; 0xc12 <__addsf3>
     4f4:	9b 01       	movw	r18, r22
     4f6:	ac 01       	movw	r20, r24
     4f8:	c2 01       	movw	r24, r4
     4fa:	b1 01       	movw	r22, r2
     4fc:	0e 94 09 06 	call	0xc12	; 0xc12 <__addsf3>
     500:	68 83       	st	Y, r22
     502:	79 83       	std	Y+1, r23	; 0x01
     504:	8a 83       	std	Y+2, r24	; 0x02
     506:	9b 83       	std	Y+3, r25	; 0x03
     508:	0f 2e       	mov	r0, r31
     50a:	f4 e0       	ldi	r31, 0x04	; 4
     50c:	cf 2e       	mov	r12, r31
     50e:	f0 e2       	ldi	r31, 0x20	; 32
     510:	df 2e       	mov	r13, r31
     512:	f0 2d       	mov	r31, r0
     514:	e7 01       	movw	r28, r14
     516:	0f 2e       	mov	r0, r31
     518:	fc e0       	ldi	r31, 0x0C	; 12
     51a:	8f 2e       	mov	r8, r31
     51c:	f0 e2       	ldi	r31, 0x20	; 32
     51e:	9f 2e       	mov	r9, r31
     520:	f0 2d       	mov	r31, r0
		// Het meest recente monster moet vermenigvuldigt worden met b12, daarna b11, dan b10
	}
	
	for (uint8_t i = 1; i < 3; i++) {
		x1[xIndex] += -a1[i] * x1[(xIndex - i) % 3];
     522:	c8 01       	movw	r24, r16
     524:	88 0f       	add	r24, r24
     526:	99 1f       	adc	r25, r25
     528:	88 0f       	add	r24, r24
     52a:	99 1f       	adc	r25, r25
     52c:	fc 01       	movw	r30, r24
     52e:	e0 58       	subi	r30, 0x80	; 128
     530:	ff 4d       	sbci	r31, 0xDF	; 223
     532:	7f 01       	movw	r14, r30
     534:	d6 01       	movw	r26, r12
     536:	2d 90       	ld	r2, X+
     538:	3d 90       	ld	r3, X+
     53a:	4d 90       	ld	r4, X+
     53c:	5d 90       	ld	r5, X+
     53e:	6d 01       	movw	r12, r26
     540:	ce 01       	movw	r24, r28
     542:	b5 01       	movw	r22, r10
     544:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__divmodhi4>
     548:	fc 01       	movw	r30, r24
     54a:	ee 0f       	add	r30, r30
     54c:	ff 1f       	adc	r31, r31
     54e:	ee 0f       	add	r30, r30
     550:	ff 1f       	adc	r31, r31
     552:	e0 58       	subi	r30, 0x80	; 128
     554:	ff 4d       	sbci	r31, 0xDF	; 223
     556:	c2 01       	movw	r24, r4
     558:	b1 01       	movw	r22, r2
     55a:	90 58       	subi	r25, 0x80	; 128
     55c:	20 81       	ld	r18, Z
     55e:	31 81       	ldd	r19, Z+1	; 0x01
     560:	42 81       	ldd	r20, Z+2	; 0x02
     562:	53 81       	ldd	r21, Z+3	; 0x03
     564:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     568:	f7 01       	movw	r30, r14
     56a:	20 81       	ld	r18, Z
     56c:	31 81       	ldd	r19, Z+1	; 0x01
     56e:	42 81       	ldd	r20, Z+2	; 0x02
     570:	53 81       	ldd	r21, Z+3	; 0x03
     572:	0e 94 09 06 	call	0xc12	; 0xc12 <__addsf3>
     576:	d7 01       	movw	r26, r14
     578:	6d 93       	st	X+, r22
     57a:	7d 93       	st	X+, r23
     57c:	8d 93       	st	X+, r24
     57e:	9c 93       	st	X, r25
     580:	13 97       	sbiw	r26, 0x03	; 3
     582:	21 97       	sbiw	r28, 0x01	; 1
	for(uint8_t i = 1; i < 3; i++) {
		x1[xIndex] += b1[2 - i] * x0[(xIndex - i) % 3];
		// Het meest recente monster moet vermenigvuldigt worden met b12, daarna b11, dan b10
	}
	
	for (uint8_t i = 1; i < 3; i++) {
     584:	c8 14       	cp	r12, r8
     586:	d9 04       	cpc	r13, r9
     588:	a9 f6       	brne	.-86     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
		x1[xIndex] += -a1[i] * x1[(xIndex - i) % 3];
	}
	x1[xIndex] /= a10;
     58a:	24 e8       	ldi	r18, 0x84	; 132
     58c:	35 ef       	ldi	r19, 0xF5	; 245
     58e:	4d e8       	ldi	r20, 0x8D	; 141
     590:	5a e4       	ldi	r21, 0x4A	; 74
     592:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     596:	6b 01       	movw	r12, r22
     598:	7c 01       	movw	r14, r24
     59a:	f8 01       	movw	r30, r16
     59c:	ee 0f       	add	r30, r30
     59e:	ff 1f       	adc	r31, r31
     5a0:	ee 0f       	add	r30, r30
     5a2:	ff 1f       	adc	r31, r31
     5a4:	e0 58       	subi	r30, 0x80	; 128
     5a6:	ff 4d       	sbci	r31, 0xDF	; 223
     5a8:	60 83       	st	Z, r22
     5aa:	71 83       	std	Z+1, r23	; 0x01
     5ac:	82 83       	std	Z+2, r24	; 0x02
     5ae:	93 83       	std	Z+3, r25	; 0x03
	
	// Tweede deel
	// Dit kan modulairder maar dan wordt het minder snel.
	// Modulairder is een mooi woord.
	
	x2[yIndex] = b21 * x1[xIndex] + b20 * x2[!xIndex];
     5b0:	c0 91 99 20 	lds	r28, 0x2099	; 0x802099 <yIndex>
     5b4:	b4 e0       	ldi	r27, 0x04	; 4
     5b6:	cb 02       	muls	r28, r27
     5b8:	e0 01       	movw	r28, r0
     5ba:	11 24       	eor	r1, r1
     5bc:	c8 58       	subi	r28, 0x88	; 136
     5be:	df 4d       	sbci	r29, 0xDF	; 223
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	77 20       	and	r7, r7
     5c6:	11 f0       	breq	.+4      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5c8:	80 e0       	ldi	r24, 0x00	; 0
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	88 0f       	add	r24, r24
     5ce:	99 1f       	adc	r25, r25
     5d0:	88 0f       	add	r24, r24
     5d2:	99 1f       	adc	r25, r25
     5d4:	fc 01       	movw	r30, r24
     5d6:	e8 58       	subi	r30, 0x88	; 136
     5d8:	ff 4d       	sbci	r31, 0xDF	; 223
     5da:	2f ef       	ldi	r18, 0xFF	; 255
     5dc:	3f ef       	ldi	r19, 0xFF	; 255
     5de:	49 ef       	ldi	r20, 0xF9	; 249
     5e0:	54 ec       	ldi	r21, 0xC4	; 196
     5e2:	60 81       	ld	r22, Z
     5e4:	71 81       	ldd	r23, Z+1	; 0x01
     5e6:	82 81       	ldd	r24, Z+2	; 0x02
     5e8:	93 81       	ldd	r25, Z+3	; 0x03
     5ea:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     5ee:	4b 01       	movw	r8, r22
     5f0:	5c 01       	movw	r10, r24
     5f2:	2f ef       	ldi	r18, 0xFF	; 255
     5f4:	3f ef       	ldi	r19, 0xFF	; 255
     5f6:	49 ef       	ldi	r20, 0xF9	; 249
     5f8:	54 e4       	ldi	r21, 0x44	; 68
     5fa:	c7 01       	movw	r24, r14
     5fc:	b6 01       	movw	r22, r12
     5fe:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     602:	9b 01       	movw	r18, r22
     604:	ac 01       	movw	r20, r24
     606:	c5 01       	movw	r24, r10
     608:	b4 01       	movw	r22, r8
     60a:	0e 94 09 06 	call	0xc12	; 0xc12 <__addsf3>
     60e:	68 83       	st	Y, r22
     610:	79 83       	std	Y+1, r23	; 0x01
     612:	8a 83       	std	Y+2, r24	; 0x02
     614:	9b 83       	std	Y+3, r25	; 0x03
	y[yIndex]  = (x2[yIndex] + -a21 * y[!yIndex]) / a20;
     616:	c0 91 99 20 	lds	r28, 0x2099	; 0x802099 <yIndex>
     61a:	e0 91 99 20 	lds	r30, 0x2099	; 0x802099 <yIndex>
     61e:	f0 90 99 20 	lds	r15, 0x2099	; 0x802099 <yIndex>
     622:	f4 e0       	ldi	r31, 0x04	; 4
     624:	cf 02       	muls	r28, r31
     626:	e0 01       	movw	r28, r0
     628:	11 24       	eor	r1, r1
     62a:	c0 59       	subi	r28, 0x90	; 144
     62c:	df 4d       	sbci	r29, 0xDF	; 223
     62e:	24 e0       	ldi	r18, 0x04	; 4
     630:	e2 02       	muls	r30, r18
     632:	f0 01       	movw	r30, r0
     634:	11 24       	eor	r1, r1
     636:	e8 58       	subi	r30, 0x88	; 136
     638:	ff 4d       	sbci	r31, 0xDF	; 223
     63a:	2b e0       	ldi	r18, 0x0B	; 11
     63c:	32 e8       	ldi	r19, 0x82	; 130
     63e:	4f e2       	ldi	r20, 0x2F	; 47
     640:	54 e4       	ldi	r21, 0x44	; 68
     642:	60 81       	ld	r22, Z
     644:	71 81       	ldd	r23, Z+1	; 0x01
     646:	82 81       	ldd	r24, Z+2	; 0x02
     648:	93 81       	ldd	r25, Z+3	; 0x03
     64a:	0e 94 08 06 	call	0xc10	; 0xc10 <__subsf3>
     64e:	4b 01       	movw	r8, r22
     650:	5c 01       	movw	r10, r24
     652:	81 e0       	ldi	r24, 0x01	; 1
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	ff 20       	and	r15, r15
     658:	11 f0       	breq	.+4      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
     65a:	80 e0       	ldi	r24, 0x00	; 0
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	88 0f       	add	r24, r24
     660:	99 1f       	adc	r25, r25
     662:	88 0f       	add	r24, r24
     664:	99 1f       	adc	r25, r25
     666:	fc 01       	movw	r30, r24
     668:	e0 59       	subi	r30, 0x90	; 144
     66a:	ff 4d       	sbci	r31, 0xDF	; 223
     66c:	2f ef       	ldi	r18, 0xFF	; 255
     66e:	3f ef       	ldi	r19, 0xFF	; 255
     670:	49 ef       	ldi	r20, 0xF9	; 249
     672:	54 e4       	ldi	r21, 0x44	; 68
     674:	60 81       	ld	r22, Z
     676:	71 81       	ldd	r23, Z+1	; 0x01
     678:	82 81       	ldd	r24, Z+2	; 0x02
     67a:	93 81       	ldd	r25, Z+3	; 0x03
     67c:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     680:	9b 01       	movw	r18, r22
     682:	ac 01       	movw	r20, r24
     684:	c5 01       	movw	r24, r10
     686:	b4 01       	movw	r22, r8
     688:	0e 94 08 06 	call	0xc10	; 0xc10 <__subsf3>
     68c:	20 e0       	ldi	r18, 0x00	; 0
     68e:	30 e0       	ldi	r19, 0x00	; 0
     690:	40 e0       	ldi	r20, 0x00	; 0
     692:	5f e3       	ldi	r21, 0x3F	; 63
     694:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     698:	2f e6       	ldi	r18, 0x6F	; 111
     69a:	32 e1       	ldi	r19, 0x12	; 18
     69c:	43 e8       	ldi	r20, 0x83	; 131
     69e:	5a e3       	ldi	r21, 0x3A	; 58
     6a0:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     6a4:	2b e0       	ldi	r18, 0x0B	; 11
     6a6:	32 e8       	ldi	r19, 0x82	; 130
     6a8:	4f e2       	ldi	r20, 0x2F	; 47
     6aa:	54 e4       	ldi	r21, 0x44	; 68
     6ac:	0e 94 09 06 	call	0xc12	; 0xc12 <__addsf3>
     6b0:	68 83       	st	Y, r22
     6b2:	79 83       	std	Y+1, r23	; 0x01
     6b4:	8a 83       	std	Y+2, r24	; 0x02
     6b6:	9b 83       	std	Y+3, r25	; 0x03

	int16_t out = ADCA.CH0.RES; //(int16_t)y[yIndex];
     6b8:	20 91 24 02 	lds	r18, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x7be224>
     6bc:	30 91 25 02 	lds	r19, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x7be225>

	xIndex = (xIndex + 1) % 3;
     6c0:	c8 01       	movw	r24, r16
     6c2:	01 96       	adiw	r24, 0x01	; 1
     6c4:	63 e0       	ldi	r22, 0x03	; 3
     6c6:	70 e0       	ldi	r23, 0x00	; 0
     6c8:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__divmodhi4>
     6cc:	80 93 98 20 	sts	0x2098, r24	; 0x802098 <xIndex.4109>
	yIndex = !yIndex; 
     6d0:	90 91 99 20 	lds	r25, 0x2099	; 0x802099 <yIndex>
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	91 11       	cpse	r25, r1
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	80 93 99 20 	sts	0x2099, r24	; 0x802099 <yIndex>
	
	//	</Jochem code>
	
	BinaryValue = out * ADC2DAC; //Bitwaarde
// 	printOut = ADC2DAC;
	DACB.CH0DATA = BinaryValue;			//write &USBDataIn to DAC (PIN A10)
     6de:	b9 01       	movw	r22, r18
     6e0:	33 0f       	add	r19, r19
     6e2:	88 0b       	sbc	r24, r24
     6e4:	99 0b       	sbc	r25, r25
     6e6:	0e 94 18 07 	call	0xe30	; 0xe30 <__floatsisf>
     6ea:	20 ec       	ldi	r18, 0xC0	; 192
     6ec:	37 ef       	ldi	r19, 0xF7	; 247
     6ee:	43 e0       	ldi	r20, 0x03	; 3
     6f0:	56 e4       	ldi	r21, 0x46	; 70
     6f2:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     6f6:	23 e3       	ldi	r18, 0x33	; 51
     6f8:	33 e3       	ldi	r19, 0x33	; 51
     6fa:	43 ed       	ldi	r20, 0xD3	; 211
     6fc:	55 e4       	ldi	r21, 0x45	; 69
     6fe:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     702:	0e 94 e7 06 	call	0xdce	; 0xdce <__fixunssfsi>
     706:	60 93 38 03 	sts	0x0338, r22	; 0x800338 <__TEXT_REGION_LENGTH__+0x7be338>
     70a:	70 93 39 03 	sts	0x0339, r23	; 0x800339 <__TEXT_REGION_LENGTH__+0x7be339>
	while (!DACB.STATUS & DAC_CH0DRE_bm);
     70e:	e0 e2       	ldi	r30, 0x20	; 32
     710:	f3 e0       	ldi	r31, 0x03	; 3
     712:	85 81       	ldd	r24, Z+5	; 0x05
     714:	88 23       	and	r24, r24
     716:	e9 f3       	breq	.-6      	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
}
     718:	ff 91       	pop	r31
     71a:	ef 91       	pop	r30
     71c:	df 91       	pop	r29
     71e:	cf 91       	pop	r28
     720:	bf 91       	pop	r27
     722:	af 91       	pop	r26
     724:	9f 91       	pop	r25
     726:	8f 91       	pop	r24
     728:	7f 91       	pop	r23
     72a:	6f 91       	pop	r22
     72c:	5f 91       	pop	r21
     72e:	4f 91       	pop	r20
     730:	3f 91       	pop	r19
     732:	2f 91       	pop	r18
     734:	1f 91       	pop	r17
     736:	0f 91       	pop	r16
     738:	ff 90       	pop	r15
     73a:	ef 90       	pop	r14
     73c:	df 90       	pop	r13
     73e:	cf 90       	pop	r12
     740:	bf 90       	pop	r11
     742:	af 90       	pop	r10
     744:	9f 90       	pop	r9
     746:	8f 90       	pop	r8
     748:	7f 90       	pop	r7
     74a:	5f 90       	pop	r5
     74c:	4f 90       	pop	r4
     74e:	3f 90       	pop	r3
     750:	2f 90       	pop	r2
     752:	0f 90       	pop	r0
     754:	0b be       	out	0x3b, r0	; 59
     756:	0f 90       	pop	r0
     758:	0f be       	out	0x3f, r0	; 63
     75a:	0f 90       	pop	r0
     75c:	1f 90       	pop	r1
     75e:	18 95       	reti

00000760 <main>:


int main(void){
	PORTC.DIRSET = PIN0_bm;	// the LED (bit 0 on port C) is set as output.
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <__TEXT_REGION_LENGTH__+0x7be641>
	PORTB.DIRSET = PIN2_bm;
     766:	84 e0       	ldi	r24, 0x04	; 4
     768:	80 93 21 06 	sts	0x0621, r24	; 0x800621 <__TEXT_REGION_LENGTH__+0x7be621>
	PORTF.DIRSET = PIN0_bm | PIN1_bm;
     76c:	83 e0       	ldi	r24, 0x03	; 3
     76e:	80 93 a1 06 	sts	0x06A1, r24	; 0x8006a1 <__TEXT_REGION_LENGTH__+0x7be6a1>
 *          which has a 16 MHz crystal 
 *
 * \return void
 */
void inline init_clock(void) {
  Config32MHzClock_Ext16M();
     772:	0e 94 a6 01 	call	0x34c	; 0x34c <Config32MHzClock_Ext16M>

	init_clock();
	init_timer();			// init timer
     776:	0e 94 c8 01 	call	0x390	; 0x390 <init_timer>
	init_dac();				// init DAC
     77a:	0e 94 e7 01 	call	0x3ce	; 0x3ce <init_dac>
	init_adc();				// init ADC
     77e:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <init_adc>
	init_stream(F_CPU);
     782:	60 e0       	ldi	r22, 0x00	; 0
     784:	78 e4       	ldi	r23, 0x48	; 72
     786:	88 ee       	ldi	r24, 0xE8	; 232
     788:	91 e0       	ldi	r25, 0x01	; 1
     78a:	0e 94 ae 04 	call	0x95c	; 0x95c <init_stream>
		
	PMIC.CTRL     |= PMIC_LOLVLEN_bm | PMIC_MEDLVLEN_bm;		// set low and medium level interrupts
     78e:	e0 ea       	ldi	r30, 0xA0	; 160
     790:	f0 e0       	ldi	r31, 0x00	; 0
     792:	82 81       	ldd	r24, Z+2	; 0x02
     794:	83 60       	ori	r24, 0x03	; 3
     796:	82 83       	std	Z+2, r24	; 0x02
	sei();					//Enable interrupts
     798:	78 94       	sei
	printf("\n\nStart met poezen aaien\n");
     79a:	86 e2       	ldi	r24, 0x26	; 38
     79c:	90 e2       	ldi	r25, 0x20	; 32
     79e:	0e 94 64 0d 	call	0x1ac8	; 0x1ac8 <puts>
	printf("%lf\t%lf\n%lf\t%lf\t%lf\n%lf\t%lf\n%lf\t%lf\t%lf\n%lf\t%lf\n", T, Td12, a10, a11, a12, a20, a21, b10, b11, b12, b20, b21);
     7a2:	84 e4       	ldi	r24, 0x44	; 68
     7a4:	8f 93       	push	r24
     7a6:	99 ef       	ldi	r25, 0xF9	; 249
     7a8:	9f 93       	push	r25
     7aa:	8f ef       	ldi	r24, 0xFF	; 255
     7ac:	8f 93       	push	r24
     7ae:	8f 93       	push	r24
     7b0:	54 ec       	ldi	r21, 0xC4	; 196
     7b2:	5f 93       	push	r21
     7b4:	9f 93       	push	r25
     7b6:	8f 93       	push	r24
     7b8:	8f 93       	push	r24
     7ba:	2a e4       	ldi	r18, 0x4A	; 74
     7bc:	2f 93       	push	r18
     7be:	34 e7       	ldi	r19, 0x74	; 116
     7c0:	3f 93       	push	r19
     7c2:	93 e2       	ldi	r25, 0x23	; 35
     7c4:	9f 93       	push	r25
     7c6:	8e ef       	ldi	r24, 0xFE	; 254
     7c8:	8f 93       	push	r24
     7ca:	4a ec       	ldi	r20, 0xCA	; 202
     7cc:	4f 93       	push	r20
     7ce:	64 ef       	ldi	r22, 0xF4	; 244
     7d0:	6f 93       	push	r22
     7d2:	9f 93       	push	r25
     7d4:	8f 93       	push	r24
     7d6:	2f 93       	push	r18
     7d8:	3f 93       	push	r19
     7da:	9f 93       	push	r25
     7dc:	8f 93       	push	r24
     7de:	5f 93       	push	r21
     7e0:	52 ea       	ldi	r21, 0xA2	; 162
     7e2:	5f 93       	push	r21
     7e4:	5e e3       	ldi	r21, 0x3E	; 62
     7e6:	5f 93       	push	r21
     7e8:	5a ef       	ldi	r21, 0xFA	; 250
     7ea:	5f 93       	push	r21
     7ec:	55 e4       	ldi	r21, 0x45	; 69
     7ee:	5f 93       	push	r21
     7f0:	58 e2       	ldi	r21, 0x28	; 40
     7f2:	5f 93       	push	r21
     7f4:	50 ee       	ldi	r21, 0xE0	; 224
     7f6:	5f 93       	push	r21
     7f8:	52 e8       	ldi	r21, 0x82	; 130
     7fa:	5f 93       	push	r21
     7fc:	2f 93       	push	r18
     7fe:	51 e6       	ldi	r21, 0x61	; 97
     800:	5f 93       	push	r21
     802:	58 e0       	ldi	r21, 0x08	; 8
     804:	5f 93       	push	r21
     806:	5e ed       	ldi	r21, 0xDE	; 222
     808:	5f 93       	push	r21
     80a:	4f 93       	push	r20
     80c:	49 ee       	ldi	r20, 0xE9	; 233
     80e:	4f 93       	push	r20
     810:	4e ec       	ldi	r20, 0xCE	; 206
     812:	4f 93       	push	r20
     814:	49 e0       	ldi	r20, 0x09	; 9
     816:	4f 93       	push	r20
     818:	2f 93       	push	r18
     81a:	2d e8       	ldi	r18, 0x8D	; 141
     81c:	2f 93       	push	r18
     81e:	25 ef       	ldi	r18, 0xF5	; 245
     820:	2f 93       	push	r18
     822:	24 e8       	ldi	r18, 0x84	; 132
     824:	2f 93       	push	r18
     826:	29 e4       	ldi	r18, 0x49	; 73
     828:	2f 93       	push	r18
     82a:	3f 93       	push	r19
     82c:	9f 93       	push	r25
     82e:	8f 93       	push	r24
     830:	8a e3       	ldi	r24, 0x3A	; 58
     832:	8f 93       	push	r24
     834:	83 e8       	ldi	r24, 0x83	; 131
     836:	8f 93       	push	r24
     838:	82 e1       	ldi	r24, 0x12	; 18
     83a:	8f 93       	push	r24
     83c:	8f e6       	ldi	r24, 0x6F	; 111
     83e:	8f 93       	push	r24
     840:	8f e3       	ldi	r24, 0x3F	; 63
     842:	90 e2       	ldi	r25, 0x20	; 32
     844:	9f 93       	push	r25
     846:	8f 93       	push	r24
     848:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <printf>
     84c:	8d b7       	in	r24, 0x3d	; 61
     84e:	9e b7       	in	r25, 0x3e	; 62
     850:	c2 96       	adiw	r24, 0x32	; 50
     852:	8d bf       	out	0x3d, r24	; 61
     854:	9e bf       	out	0x3e, r25	; 62
	
	while (1) {
		asm volatile ("nop");
     856:	00 00       	nop
     858:	fe cf       	rjmp	.-4      	; 0x856 <main+0xf6>

0000085a <CanRead_F0>:
    }
  }
  *p = '\0';

  return buf;
}
     85a:	80 91 ff 20 	lds	r24, 0x20FF	; 0x8020ff <rx_f0_wridx>
     85e:	90 91 fe 20 	lds	r25, 0x20FE	; 0x8020fe <rx_f0_rdidx>
     862:	89 17       	cp	r24, r25
     864:	10 f0       	brcs	.+4      	; 0x86a <CanRead_F0+0x10>
     866:	89 1b       	sub	r24, r25
     868:	08 95       	ret
     86a:	8c 59       	subi	r24, 0x9C	; 156
     86c:	89 1b       	sub	r24, r25
     86e:	08 95       	ret

00000870 <ReadByte_F0>:
     870:	cf 93       	push	r28
     872:	c0 91 fe 20 	lds	r28, 0x20FE	; 0x8020fe <rx_f0_rdidx>
     876:	0e 94 2d 04 	call	0x85a	; 0x85a <CanRead_F0>
     87a:	88 23       	and	r24, r24
     87c:	e1 f3       	breq	.-8      	; 0x876 <ReadByte_F0+0x6>
     87e:	ec 2f       	mov	r30, r28
     880:	f0 e0       	ldi	r31, 0x00	; 0
     882:	e6 56       	subi	r30, 0x66	; 102
     884:	ff 4d       	sbci	r31, 0xDF	; 223
     886:	80 81       	ld	r24, Z
     888:	91 e0       	ldi	r25, 0x01	; 1
     88a:	9c 0f       	add	r25, r28
     88c:	94 36       	cpi	r25, 0x64	; 100
     88e:	08 f0       	brcs	.+2      	; 0x892 <ReadByte_F0+0x22>
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	90 93 fe 20 	sts	0x20FE, r25	; 0x8020fe <rx_f0_rdidx>
     896:	cf 91       	pop	r28
     898:	08 95       	ret

0000089a <uartF0_fgetc>:
     89a:	0e 94 38 04 	call	0x870	; 0x870 <ReadByte_F0>
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	08 95       	ret

000008a2 <CanWrite_F0>:
     8a2:	20 91 65 21 	lds	r18, 0x2165	; 0x802165 <tx_f0_wridx>
     8a6:	91 e0       	ldi	r25, 0x01	; 1
     8a8:	92 0f       	add	r25, r18
     8aa:	80 91 64 21 	lds	r24, 0x2164	; 0x802164 <tx_f0_rdidx>
     8ae:	94 36       	cpi	r25, 0x64	; 100
     8b0:	10 f0       	brcs	.+4      	; 0x8b6 <CanWrite_F0+0x14>
     8b2:	9d e9       	ldi	r25, 0x9D	; 157
     8b4:	92 0f       	add	r25, r18
     8b6:	89 17       	cp	r24, r25
     8b8:	10 f0       	brcs	.+4      	; 0x8be <CanWrite_F0+0x1c>
     8ba:	89 1b       	sub	r24, r25
     8bc:	08 95       	ret
     8be:	8c 59       	subi	r24, 0x9C	; 156
     8c0:	89 1b       	sub	r24, r25
     8c2:	08 95       	ret

000008c4 <WriteByte_F0>:
     8c4:	0f 93       	push	r16
     8c6:	1f 93       	push	r17
     8c8:	cf 93       	push	r28
     8ca:	df 93       	push	r29
     8cc:	d8 2f       	mov	r29, r24
     8ce:	00 ea       	ldi	r16, 0xA0	; 160
     8d0:	1b e0       	ldi	r17, 0x0B	; 11
     8d2:	c1 e2       	ldi	r28, 0x21	; 33
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <WriteByte_F0+0x16>
     8d6:	f8 01       	movw	r30, r16
     8d8:	c3 83       	std	Z+3, r28	; 0x03
     8da:	0e 94 51 04 	call	0x8a2	; 0x8a2 <CanWrite_F0>
     8de:	88 23       	and	r24, r24
     8e0:	d1 f3       	breq	.-12     	; 0x8d6 <WriteByte_F0+0x12>
     8e2:	80 91 65 21 	lds	r24, 0x2165	; 0x802165 <tx_f0_wridx>
     8e6:	e8 2f       	mov	r30, r24
     8e8:	f0 e0       	ldi	r31, 0x00	; 0
     8ea:	e0 50       	subi	r30, 0x00	; 0
     8ec:	ff 4d       	sbci	r31, 0xDF	; 223
     8ee:	d0 83       	st	Z, r29
     8f0:	8f 5f       	subi	r24, 0xFF	; 255
     8f2:	84 36       	cpi	r24, 0x64	; 100
     8f4:	08 f0       	brcs	.+2      	; 0x8f8 <WriteByte_F0+0x34>
     8f6:	80 e0       	ldi	r24, 0x00	; 0
     8f8:	e0 ea       	ldi	r30, 0xA0	; 160
     8fa:	f0 e0       	ldi	r31, 0x00	; 0
     8fc:	92 81       	ldd	r25, Z+2	; 0x02
     8fe:	29 2f       	mov	r18, r25
     900:	2e 7f       	andi	r18, 0xFE	; 254
     902:	22 83       	std	Z+2, r18	; 0x02
     904:	80 93 65 21 	sts	0x2165, r24	; 0x802165 <tx_f0_wridx>
     908:	81 e2       	ldi	r24, 0x21	; 33
     90a:	80 93 a3 0b 	sts	0x0BA3, r24	; 0x800ba3 <__TEXT_REGION_LENGTH__+0x7beba3>
     90e:	92 83       	std	Z+2, r25	; 0x02
     910:	df 91       	pop	r29
     912:	cf 91       	pop	r28
     914:	1f 91       	pop	r17
     916:	0f 91       	pop	r16
     918:	08 95       	ret

0000091a <uartF0_fputc>:
     91a:	cf 93       	push	r28
     91c:	df 93       	push	r29
     91e:	d8 2f       	mov	r29, r24
     920:	cf ef       	ldi	r28, 0xFF	; 255
     922:	03 c0       	rjmp	.+6      	; 0x92a <uartF0_fputc+0x10>
     924:	cc 23       	and	r28, r28
     926:	91 f0       	breq	.+36     	; 0x94c <uartF0_fputc+0x32>
     928:	c1 50       	subi	r28, 0x01	; 1
     92a:	0e 94 51 04 	call	0x8a2	; 0x8a2 <CanWrite_F0>
     92e:	88 23       	and	r24, r24
     930:	c9 f3       	breq	.-14     	; 0x924 <uartF0_fputc+0xa>
     932:	cc 23       	and	r28, r28
     934:	71 f0       	breq	.+28     	; 0x952 <uartF0_fputc+0x38>
     936:	da 30       	cpi	r29, 0x0A	; 10
     938:	19 f4       	brne	.+6      	; 0x940 <uartF0_fputc+0x26>
     93a:	8d e0       	ldi	r24, 0x0D	; 13
     93c:	0e 94 62 04 	call	0x8c4	; 0x8c4 <WriteByte_F0>
     940:	8d 2f       	mov	r24, r29
     942:	0e 94 62 04 	call	0x8c4	; 0x8c4 <WriteByte_F0>
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	05 c0       	rjmp	.+10     	; 0x956 <uartF0_fputc+0x3c>
     94c:	81 e0       	ldi	r24, 0x01	; 1
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	02 c0       	rjmp	.+4      	; 0x956 <uartF0_fputc+0x3c>
     952:	81 e0       	ldi	r24, 0x01	; 1
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	08 95       	ret

0000095c <init_stream>:
 *           If you want to use another baud rate you can change it in this function.
 *
 *  \return  void
 */
void init_stream(uint32_t f_cpu)
{
     95c:	4f 92       	push	r4
     95e:	5f 92       	push	r5
     960:	6f 92       	push	r6
     962:	7f 92       	push	r7
     964:	8f 92       	push	r8
     966:	9f 92       	push	r9
     968:	af 92       	push	r10
     96a:	bf 92       	push	r11
     96c:	ef 92       	push	r14
     96e:	ff 92       	push	r15
     970:	0f 93       	push	r16
     972:	1f 93       	push	r17
     974:	cf 93       	push	r28
     976:	4b 01       	movw	r8, r22
     978:	5c 01       	movw	r10, r24
     97a:	07 e0       	ldi	r16, 0x07	; 7
     97c:	10 e0       	ldi	r17, 0x00	; 0
static int8_t calc_bscale(uint32_t f_cpu, uint32_t baud, uint8_t clk2x)
{
  int8_t   bscale;
  uint16_t bsel;

  for (bscale = -7; bscale<8; bscale++) {
     97e:	c9 ef       	ldi	r28, 0xF9	; 249

  factor = factor >> (clk2x & 0x01);
  if ( scale < 0 ) {
    return round(  (((double)(f_cpu)/(factor*(double)(baud))) - 1) * (1<<-(scale))  );
  } else {
    return round(  ((double)(f_cpu)/(factor*(double)(baud))/(1<<(scale))) - 1);
     980:	ee 24       	eor	r14, r14
     982:	e3 94       	inc	r14
     984:	f1 2c       	mov	r15, r1
static uint16_t calc_bsel(uint32_t f_cpu, uint32_t baud, int8_t scale, uint8_t clk2x)
{
  uint8_t factor = 16;

  factor = factor >> (clk2x & 0x01);
  if ( scale < 0 ) {
     986:	cc 23       	and	r28, r28
     988:	54 f5       	brge	.+84     	; 0x9de <init_stream+0x82>
    return round(  (((double)(f_cpu)/(factor*(double)(baud))) - 1) * (1<<-(scale))  );
     98a:	c5 01       	movw	r24, r10
     98c:	b4 01       	movw	r22, r8
     98e:	0e 94 16 07 	call	0xe2c	; 0xe2c <__floatunsisf>
     992:	20 e0       	ldi	r18, 0x00	; 0
     994:	30 e0       	ldi	r19, 0x00	; 0
     996:	41 ee       	ldi	r20, 0xE1	; 225
     998:	59 e4       	ldi	r21, 0x49	; 73
     99a:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	40 e8       	ldi	r20, 0x80	; 128
     9a4:	5f e3       	ldi	r21, 0x3F	; 63
     9a6:	0e 94 08 06 	call	0xc10	; 0xc10 <__subsf3>
     9aa:	2b 01       	movw	r4, r22
     9ac:	3c 01       	movw	r6, r24
     9ae:	b7 01       	movw	r22, r14
     9b0:	00 2e       	mov	r0, r16
     9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <init_stream+0x5c>
     9b4:	66 0f       	add	r22, r22
     9b6:	77 1f       	adc	r23, r23
     9b8:	0a 94       	dec	r0
     9ba:	e2 f7       	brpl	.-8      	; 0x9b4 <init_stream+0x58>
     9bc:	07 2e       	mov	r0, r23
     9be:	00 0c       	add	r0, r0
     9c0:	88 0b       	sbc	r24, r24
     9c2:	99 0b       	sbc	r25, r25
     9c4:	0e 94 18 07 	call	0xe30	; 0xe30 <__floatsisf>
     9c8:	9b 01       	movw	r18, r22
     9ca:	ac 01       	movw	r20, r24
     9cc:	c3 01       	movw	r24, r6
     9ce:	b2 01       	movw	r22, r4
     9d0:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     9d4:	0e 94 11 08 	call	0x1022	; 0x1022 <round>
     9d8:	0e 94 e7 06 	call	0xdce	; 0xdce <__fixunssfsi>
     9dc:	2c c0       	rjmp	.+88     	; 0xa36 <init_stream+0xda>
  } else {
    return round(  ((double)(f_cpu)/(factor*(double)(baud))/(1<<(scale))) - 1);
     9de:	c5 01       	movw	r24, r10
     9e0:	b4 01       	movw	r22, r8
     9e2:	0e 94 16 07 	call	0xe2c	; 0xe2c <__floatunsisf>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	41 ee       	ldi	r20, 0xE1	; 225
     9ec:	59 e4       	ldi	r21, 0x49	; 73
     9ee:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     9f2:	2b 01       	movw	r4, r22
     9f4:	3c 01       	movw	r6, r24
     9f6:	88 27       	eor	r24, r24
     9f8:	99 27       	eor	r25, r25
     9fa:	80 1b       	sub	r24, r16
     9fc:	91 0b       	sbc	r25, r17
     9fe:	b7 01       	movw	r22, r14
     a00:	02 c0       	rjmp	.+4      	; 0xa06 <init_stream+0xaa>
     a02:	66 0f       	add	r22, r22
     a04:	77 1f       	adc	r23, r23
     a06:	8a 95       	dec	r24
     a08:	e2 f7       	brpl	.-8      	; 0xa02 <init_stream+0xa6>
     a0a:	07 2e       	mov	r0, r23
     a0c:	00 0c       	add	r0, r0
     a0e:	88 0b       	sbc	r24, r24
     a10:	99 0b       	sbc	r25, r25
     a12:	0e 94 18 07 	call	0xe30	; 0xe30 <__floatsisf>
     a16:	9b 01       	movw	r18, r22
     a18:	ac 01       	movw	r20, r24
     a1a:	c3 01       	movw	r24, r6
     a1c:	b2 01       	movw	r22, r4
     a1e:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     a22:	20 e0       	ldi	r18, 0x00	; 0
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	40 e8       	ldi	r20, 0x80	; 128
     a28:	5f e3       	ldi	r21, 0x3F	; 63
     a2a:	0e 94 08 06 	call	0xc10	; 0xc10 <__subsf3>
     a2e:	0e 94 11 08 	call	0x1022	; 0x1022 <round>
     a32:	0e 94 e7 06 	call	0xdce	; 0xdce <__fixunssfsi>
{
  int8_t   bscale;
  uint16_t bsel;

  for (bscale = -7; bscale<8; bscale++) {
    if ( (bsel = calc_bsel(f_cpu, baud, bscale, clk2x)) < 4096 ) return bscale;
     a36:	61 15       	cp	r22, r1
     a38:	70 41       	sbci	r23, 0x10	; 16
     a3a:	38 f0       	brcs	.+14     	; 0xa4a <init_stream+0xee>
     a3c:	cf 5f       	subi	r28, 0xFF	; 255
     a3e:	01 50       	subi	r16, 0x01	; 1
     a40:	11 09       	sbc	r17, r1
static int8_t calc_bscale(uint32_t f_cpu, uint32_t baud, uint8_t clk2x)
{
  int8_t   bscale;
  uint16_t bsel;

  for (bscale = -7; bscale<8; bscale++) {
     a42:	c8 30       	cpi	r28, 0x08	; 8
     a44:	09 f0       	breq	.+2      	; 0xa48 <init_stream+0xec>
     a46:	9f cf       	rjmp	.-194    	; 0x986 <init_stream+0x2a>
     a48:	31 c0       	rjmp	.+98     	; 0xaac <init_stream+0x150>
static uint16_t calc_bsel(uint32_t f_cpu, uint32_t baud, int8_t scale, uint8_t clk2x)
{
  uint8_t factor = 16;

  factor = factor >> (clk2x & 0x01);
  if ( scale < 0 ) {
     a4a:	cc 23       	and	r28, r28
     a4c:	7c f5       	brge	.+94     	; 0xaac <init_stream+0x150>
    return round(  (((double)(f_cpu)/(factor*(double)(baud))) - 1) * (1<<-(scale))  );
     a4e:	c5 01       	movw	r24, r10
     a50:	b4 01       	movw	r22, r8
     a52:	0e 94 16 07 	call	0xe2c	; 0xe2c <__floatunsisf>
     a56:	20 e0       	ldi	r18, 0x00	; 0
     a58:	30 e0       	ldi	r19, 0x00	; 0
     a5a:	41 ee       	ldi	r20, 0xE1	; 225
     a5c:	59 e4       	ldi	r21, 0x49	; 73
     a5e:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     a62:	20 e0       	ldi	r18, 0x00	; 0
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	40 e8       	ldi	r20, 0x80	; 128
     a68:	5f e3       	ldi	r21, 0x3F	; 63
     a6a:	0e 94 08 06 	call	0xc10	; 0xc10 <__subsf3>
     a6e:	4b 01       	movw	r8, r22
     a70:	5c 01       	movw	r10, r24
     a72:	2c 2f       	mov	r18, r28
     a74:	33 27       	eor	r19, r19
     a76:	21 95       	neg	r18
     a78:	0c f4       	brge	.+2      	; 0xa7c <init_stream+0x120>
     a7a:	30 95       	com	r19
     a7c:	61 e0       	ldi	r22, 0x01	; 1
     a7e:	70 e0       	ldi	r23, 0x00	; 0
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <init_stream+0x12a>
     a82:	66 0f       	add	r22, r22
     a84:	77 1f       	adc	r23, r23
     a86:	2a 95       	dec	r18
     a88:	e2 f7       	brpl	.-8      	; 0xa82 <init_stream+0x126>
     a8a:	07 2e       	mov	r0, r23
     a8c:	00 0c       	add	r0, r0
     a8e:	88 0b       	sbc	r24, r24
     a90:	99 0b       	sbc	r25, r25
     a92:	0e 94 18 07 	call	0xe30	; 0xe30 <__floatsisf>
     a96:	9b 01       	movw	r18, r22
     a98:	ac 01       	movw	r20, r24
     a9a:	c5 01       	movw	r24, r10
     a9c:	b4 01       	movw	r22, r8
     a9e:	0e 94 a4 07 	call	0xf48	; 0xf48 <__mulsf3>
     aa2:	0e 94 11 08 	call	0x1022	; 0x1022 <round>
     aa6:	0e 94 e7 06 	call	0xdce	; 0xdce <__fixunssfsi>
     aaa:	2a c0       	rjmp	.+84     	; 0xb00 <init_stream+0x1a4>
  } else {
    return round(  ((double)(f_cpu)/(factor*(double)(baud))/(1<<(scale))) - 1);
     aac:	c5 01       	movw	r24, r10
     aae:	b4 01       	movw	r22, r8
     ab0:	0e 94 16 07 	call	0xe2c	; 0xe2c <__floatunsisf>
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	41 ee       	ldi	r20, 0xE1	; 225
     aba:	59 e4       	ldi	r21, 0x49	; 73
     abc:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     ac0:	4b 01       	movw	r8, r22
     ac2:	5c 01       	movw	r10, r24
     ac4:	61 e0       	ldi	r22, 0x01	; 1
     ac6:	70 e0       	ldi	r23, 0x00	; 0
     ac8:	0c 2e       	mov	r0, r28
     aca:	02 c0       	rjmp	.+4      	; 0xad0 <init_stream+0x174>
     acc:	66 0f       	add	r22, r22
     ace:	77 1f       	adc	r23, r23
     ad0:	0a 94       	dec	r0
     ad2:	e2 f7       	brpl	.-8      	; 0xacc <init_stream+0x170>
     ad4:	07 2e       	mov	r0, r23
     ad6:	00 0c       	add	r0, r0
     ad8:	88 0b       	sbc	r24, r24
     ada:	99 0b       	sbc	r25, r25
     adc:	0e 94 18 07 	call	0xe30	; 0xe30 <__floatsisf>
     ae0:	9b 01       	movw	r18, r22
     ae2:	ac 01       	movw	r20, r24
     ae4:	c5 01       	movw	r24, r10
     ae6:	b4 01       	movw	r22, r8
     ae8:	0e 94 75 06 	call	0xcea	; 0xcea <__divsf3>
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	40 e8       	ldi	r20, 0x80	; 128
     af2:	5f e3       	ldi	r21, 0x3F	; 63
     af4:	0e 94 08 06 	call	0xc10	; 0xc10 <__subsf3>
     af8:	0e 94 11 08 	call	0x1022	; 0x1022 <round>
     afc:	0e 94 e7 06 	call	0xdce	; 0xdce <__fixunssfsi>
  int8_t bscale;

  bscale = calc_bscale(f_cpu, BAUD_115K2, UART_NO_DOUBLE_CLK);
  bsel   = calc_bsel(f_cpu, BAUD_115K2, bscale, UART_NO_DOUBLE_CLK);

	PORTF.PIN2CTRL = PORT_OPC_PULLUP_gc;  // pullup on rx
     b00:	e0 ea       	ldi	r30, 0xA0	; 160
     b02:	f6 e0       	ldi	r31, 0x06	; 6
     b04:	88 e1       	ldi	r24, 0x18	; 24
     b06:	82 8b       	std	Z+18, r24	; 0x12
	PORTF.OUTSET = PIN3_bm;               // tx high
     b08:	98 e0       	ldi	r25, 0x08	; 8
     b0a:	95 83       	std	Z+5, r25	; 0x05
	PORTF.DIRSET = PIN3_bm;
     b0c:	91 83       	std	Z+1, r25	; 0x01
	PORTF.DIRCLR = PIN2_bm;
     b0e:	94 e0       	ldi	r25, 0x04	; 4
     b10:	92 83       	std	Z+2, r25	; 0x02

	USARTF0.BAUDCTRLA = (bsel & USART_BSEL_gm);
     b12:	e0 ea       	ldi	r30, 0xA0	; 160
     b14:	fb e0       	ldi	r31, 0x0B	; 11
     b16:	66 83       	std	Z+6, r22	; 0x06
	USARTF0.BAUDCTRLB = ((bscale << USART_BSCALE_gp) & USART_BSCALE_gm) |
     b18:	7f 70       	andi	r23, 0x0F	; 15
     b1a:	c2 95       	swap	r28
     b1c:	c0 7f       	andi	r28, 0xF0	; 240
     b1e:	c7 2b       	or	r28, r23
     b20:	c7 83       	std	Z+7, r28	; 0x07
                      ((bsel >> 8) & ~USART_BSCALE_gm);
	
 	USARTF0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
     b22:	84 83       	std	Z+4, r24	; 0x04

	USARTF0.CTRLA = USART_RXCINTLVL_MED_gc | 
     b24:	80 e2       	ldi	r24, 0x20	; 32
     b26:	83 83       	std	Z+3, r24	; 0x03
                  USART_TXCINTLVL_OFF_gc | USART_DREINTLVL_OFF_gc;
	
	PMIC.CTRL |= PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm;
     b28:	e0 ea       	ldi	r30, 0xA0	; 160
     b2a:	f0 e0       	ldi	r31, 0x00	; 0
     b2c:	82 81       	ldd	r24, Z+2	; 0x02
     b2e:	83 60       	ori	r24, 0x03	; 3
     b30:	82 83       	std	Z+2, r24	; 0x02
  stdout = stdin = &uartF0_stdinout;
     b32:	e6 e6       	ldi	r30, 0x66	; 102
     b34:	f1 e2       	ldi	r31, 0x21	; 33
     b36:	88 e1       	ldi	r24, 0x18	; 24
     b38:	90 e2       	ldi	r25, 0x20	; 32
     b3a:	80 83       	st	Z, r24
     b3c:	91 83       	std	Z+1, r25	; 0x01
     b3e:	82 83       	std	Z+2, r24	; 0x02
     b40:	93 83       	std	Z+3, r25	; 0x03
	
} // init_stream
     b42:	cf 91       	pop	r28
     b44:	1f 91       	pop	r17
     b46:	0f 91       	pop	r16
     b48:	ff 90       	pop	r15
     b4a:	ef 90       	pop	r14
     b4c:	bf 90       	pop	r11
     b4e:	af 90       	pop	r10
     b50:	9f 90       	pop	r9
     b52:	8f 90       	pop	r8
     b54:	7f 90       	pop	r7
     b56:	6f 90       	pop	r6
     b58:	5f 90       	pop	r5
     b5a:	4f 90       	pop	r4
     b5c:	08 95       	ret

00000b5e <__vector_119>:
} // WriteByte_F0 

/*  \brief  ISR for receiving bytes from UARTF0.
 *          It puts the received byte in the RX buffer
 */
ISR(USARTF0_RXC_vect) {
     b5e:	1f 92       	push	r1
     b60:	0f 92       	push	r0
     b62:	0f b6       	in	r0, 0x3f	; 63
     b64:	0f 92       	push	r0
     b66:	11 24       	eor	r1, r1
     b68:	0b b6       	in	r0, 0x3b	; 59
     b6a:	0f 92       	push	r0
     b6c:	8f 93       	push	r24
     b6e:	9f 93       	push	r25
     b70:	ef 93       	push	r30
     b72:	ff 93       	push	r31
	
	uint8_t curSlot, nextSlot;
	
	curSlot = rx_f0_wridx;
     b74:	80 91 ff 20 	lds	r24, 0x20FF	; 0x8020ff <rx_f0_wridx>
	rx_f0_buf[curSlot] = USARTF0.DATA;
     b78:	e8 2f       	mov	r30, r24
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	90 91 a0 0b 	lds	r25, 0x0BA0	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x7beba0>
     b80:	e6 56       	subi	r30, 0x66	; 102
     b82:	ff 4d       	sbci	r31, 0xDF	; 223
     b84:	90 83       	st	Z, r25
	
	nextSlot = curSlot + 1;
     b86:	8f 5f       	subi	r24, 0xFF	; 255
	if(nextSlot >= RXBUF_DEPTH_F0)
     b88:	84 36       	cpi	r24, 0x64	; 100
     b8a:	08 f0       	brcs	.+2      	; 0xb8e <__vector_119+0x30>
	nextSlot = 0;
     b8c:	80 e0       	ldi	r24, 0x00	; 0
	
	if(nextSlot != rx_f0_rdidx)
     b8e:	90 91 fe 20 	lds	r25, 0x20FE	; 0x8020fe <rx_f0_rdidx>
     b92:	89 13       	cpse	r24, r25
	rx_f0_wridx = nextSlot;
     b94:	80 93 ff 20 	sts	0x20FF, r24	; 0x8020ff <rx_f0_wridx>
	
} // ISR(USARTF0_RXC_vect)
     b98:	ff 91       	pop	r31
     b9a:	ef 91       	pop	r30
     b9c:	9f 91       	pop	r25
     b9e:	8f 91       	pop	r24
     ba0:	0f 90       	pop	r0
     ba2:	0b be       	out	0x3b, r0	; 59
     ba4:	0f 90       	pop	r0
     ba6:	0f be       	out	0x3f, r0	; 63
     ba8:	0f 90       	pop	r0
     baa:	1f 90       	pop	r1
     bac:	18 95       	reti

00000bae <__vector_120>:


/*  \brief  ISR for transmitting bytes to UARTF0.
 *          If there is a byte to send in the TX buffer, it will be send
 */
ISR(USARTF0_DRE_vect) {
     bae:	1f 92       	push	r1
     bb0:	0f 92       	push	r0
     bb2:	0f b6       	in	r0, 0x3f	; 63
     bb4:	0f 92       	push	r0
     bb6:	11 24       	eor	r1, r1
     bb8:	0b b6       	in	r0, 0x3b	; 59
     bba:	0f 92       	push	r0
     bbc:	2f 93       	push	r18
     bbe:	8f 93       	push	r24
     bc0:	9f 93       	push	r25
     bc2:	ef 93       	push	r30
     bc4:	ff 93       	push	r31
	
	uint8_t curSlot, nextSlot, lastSlot;
	
	nextSlot = curSlot = tx_f0_rdidx;
     bc6:	80 91 64 21 	lds	r24, 0x2164	; 0x802164 <tx_f0_rdidx>
	lastSlot = tx_f0_wridx;
     bca:	90 91 65 21 	lds	r25, 0x2165	; 0x802165 <tx_f0_wridx>
	
	if(curSlot != lastSlot) {
     bce:	89 17       	cp	r24, r25
     bd0:	69 f0       	breq	.+26     	; 0xbec <__vector_120+0x3e>
		USARTF0.DATA = tx_f0_buf[curSlot];
     bd2:	e8 2f       	mov	r30, r24
     bd4:	f0 e0       	ldi	r31, 0x00	; 0
     bd6:	e0 50       	subi	r30, 0x00	; 0
     bd8:	ff 4d       	sbci	r31, 0xDF	; 223
     bda:	20 81       	ld	r18, Z
     bdc:	20 93 a0 0b 	sts	0x0BA0, r18	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x7beba0>
		nextSlot = curSlot + 1;
     be0:	8f 5f       	subi	r24, 0xFF	; 255
		if(nextSlot >= TXBUF_DEPTH_F0)
     be2:	84 36       	cpi	r24, 0x64	; 100
     be4:	08 f0       	brcs	.+2      	; 0xbe8 <__vector_120+0x3a>
		nextSlot = 0;
     be6:	80 e0       	ldi	r24, 0x00	; 0
	}
	if(nextSlot == lastSlot)
     be8:	89 13       	cpse	r24, r25
     bea:	04 c0       	rjmp	.+8      	; 0xbf4 <__vector_120+0x46>
	USARTF0.CTRLA = USART_RXCINTLVL_MED_gc | USART_TXCINTLVL_OFF_gc | USART_DREINTLVL_OFF_gc;
     bec:	80 e2       	ldi	r24, 0x20	; 32
     bee:	80 93 a3 0b 	sts	0x0BA3, r24	; 0x800ba3 <__TEXT_REGION_LENGTH__+0x7beba3>
     bf2:	89 2f       	mov	r24, r25
	
	tx_f0_rdidx = nextSlot;
     bf4:	80 93 64 21 	sts	0x2164, r24	; 0x802164 <tx_f0_rdidx>
	
} // ISR(USARTF0_DRE_vect) 
     bf8:	ff 91       	pop	r31
     bfa:	ef 91       	pop	r30
     bfc:	9f 91       	pop	r25
     bfe:	8f 91       	pop	r24
     c00:	2f 91       	pop	r18
     c02:	0f 90       	pop	r0
     c04:	0b be       	out	0x3b, r0	; 59
     c06:	0f 90       	pop	r0
     c08:	0f be       	out	0x3f, r0	; 63
     c0a:	0f 90       	pop	r0
     c0c:	1f 90       	pop	r1
     c0e:	18 95       	reti

00000c10 <__subsf3>:
     c10:	50 58       	subi	r21, 0x80	; 128

00000c12 <__addsf3>:
     c12:	bb 27       	eor	r27, r27
     c14:	aa 27       	eor	r26, r26
     c16:	0e 94 20 06 	call	0xc40	; 0xc40 <__addsf3x>
     c1a:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <__fp_round>
     c1e:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fp_pscA>
     c22:	38 f0       	brcs	.+14     	; 0xc32 <__addsf3+0x20>
     c24:	0e 94 63 07 	call	0xec6	; 0xec6 <__fp_pscB>
     c28:	20 f0       	brcs	.+8      	; 0xc32 <__addsf3+0x20>
     c2a:	39 f4       	brne	.+14     	; 0xc3a <__addsf3+0x28>
     c2c:	9f 3f       	cpi	r25, 0xFF	; 255
     c2e:	19 f4       	brne	.+6      	; 0xc36 <__addsf3+0x24>
     c30:	26 f4       	brtc	.+8      	; 0xc3a <__addsf3+0x28>
     c32:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__fp_nan>
     c36:	0e f4       	brtc	.+2      	; 0xc3a <__addsf3+0x28>
     c38:	e0 95       	com	r30
     c3a:	e7 fb       	bst	r30, 7
     c3c:	0c 94 53 07 	jmp	0xea6	; 0xea6 <__fp_inf>

00000c40 <__addsf3x>:
     c40:	e9 2f       	mov	r30, r25
     c42:	0e 94 7b 07 	call	0xef6	; 0xef6 <__fp_split3>
     c46:	58 f3       	brcs	.-42     	; 0xc1e <__addsf3+0xc>
     c48:	ba 17       	cp	r27, r26
     c4a:	62 07       	cpc	r22, r18
     c4c:	73 07       	cpc	r23, r19
     c4e:	84 07       	cpc	r24, r20
     c50:	95 07       	cpc	r25, r21
     c52:	20 f0       	brcs	.+8      	; 0xc5c <__addsf3x+0x1c>
     c54:	79 f4       	brne	.+30     	; 0xc74 <__addsf3x+0x34>
     c56:	a6 f5       	brtc	.+104    	; 0xcc0 <__addsf3x+0x80>
     c58:	0c 94 9d 07 	jmp	0xf3a	; 0xf3a <__fp_zero>
     c5c:	0e f4       	brtc	.+2      	; 0xc60 <__addsf3x+0x20>
     c5e:	e0 95       	com	r30
     c60:	0b 2e       	mov	r0, r27
     c62:	ba 2f       	mov	r27, r26
     c64:	a0 2d       	mov	r26, r0
     c66:	0b 01       	movw	r0, r22
     c68:	b9 01       	movw	r22, r18
     c6a:	90 01       	movw	r18, r0
     c6c:	0c 01       	movw	r0, r24
     c6e:	ca 01       	movw	r24, r20
     c70:	a0 01       	movw	r20, r0
     c72:	11 24       	eor	r1, r1
     c74:	ff 27       	eor	r31, r31
     c76:	59 1b       	sub	r21, r25
     c78:	99 f0       	breq	.+38     	; 0xca0 <__addsf3x+0x60>
     c7a:	59 3f       	cpi	r21, 0xF9	; 249
     c7c:	50 f4       	brcc	.+20     	; 0xc92 <__addsf3x+0x52>
     c7e:	50 3e       	cpi	r21, 0xE0	; 224
     c80:	68 f1       	brcs	.+90     	; 0xcdc <__addsf3x+0x9c>
     c82:	1a 16       	cp	r1, r26
     c84:	f0 40       	sbci	r31, 0x00	; 0
     c86:	a2 2f       	mov	r26, r18
     c88:	23 2f       	mov	r18, r19
     c8a:	34 2f       	mov	r19, r20
     c8c:	44 27       	eor	r20, r20
     c8e:	58 5f       	subi	r21, 0xF8	; 248
     c90:	f3 cf       	rjmp	.-26     	; 0xc78 <__addsf3x+0x38>
     c92:	46 95       	lsr	r20
     c94:	37 95       	ror	r19
     c96:	27 95       	ror	r18
     c98:	a7 95       	ror	r26
     c9a:	f0 40       	sbci	r31, 0x00	; 0
     c9c:	53 95       	inc	r21
     c9e:	c9 f7       	brne	.-14     	; 0xc92 <__addsf3x+0x52>
     ca0:	7e f4       	brtc	.+30     	; 0xcc0 <__addsf3x+0x80>
     ca2:	1f 16       	cp	r1, r31
     ca4:	ba 0b       	sbc	r27, r26
     ca6:	62 0b       	sbc	r22, r18
     ca8:	73 0b       	sbc	r23, r19
     caa:	84 0b       	sbc	r24, r20
     cac:	ba f0       	brmi	.+46     	; 0xcdc <__addsf3x+0x9c>
     cae:	91 50       	subi	r25, 0x01	; 1
     cb0:	a1 f0       	breq	.+40     	; 0xcda <__addsf3x+0x9a>
     cb2:	ff 0f       	add	r31, r31
     cb4:	bb 1f       	adc	r27, r27
     cb6:	66 1f       	adc	r22, r22
     cb8:	77 1f       	adc	r23, r23
     cba:	88 1f       	adc	r24, r24
     cbc:	c2 f7       	brpl	.-16     	; 0xcae <__addsf3x+0x6e>
     cbe:	0e c0       	rjmp	.+28     	; 0xcdc <__addsf3x+0x9c>
     cc0:	ba 0f       	add	r27, r26
     cc2:	62 1f       	adc	r22, r18
     cc4:	73 1f       	adc	r23, r19
     cc6:	84 1f       	adc	r24, r20
     cc8:	48 f4       	brcc	.+18     	; 0xcdc <__addsf3x+0x9c>
     cca:	87 95       	ror	r24
     ccc:	77 95       	ror	r23
     cce:	67 95       	ror	r22
     cd0:	b7 95       	ror	r27
     cd2:	f7 95       	ror	r31
     cd4:	9e 3f       	cpi	r25, 0xFE	; 254
     cd6:	08 f0       	brcs	.+2      	; 0xcda <__addsf3x+0x9a>
     cd8:	b0 cf       	rjmp	.-160    	; 0xc3a <__addsf3+0x28>
     cda:	93 95       	inc	r25
     cdc:	88 0f       	add	r24, r24
     cde:	08 f0       	brcs	.+2      	; 0xce2 <__addsf3x+0xa2>
     ce0:	99 27       	eor	r25, r25
     ce2:	ee 0f       	add	r30, r30
     ce4:	97 95       	ror	r25
     ce6:	87 95       	ror	r24
     ce8:	08 95       	ret

00000cea <__divsf3>:
     cea:	0e 94 89 06 	call	0xd12	; 0xd12 <__divsf3x>
     cee:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <__fp_round>
     cf2:	0e 94 63 07 	call	0xec6	; 0xec6 <__fp_pscB>
     cf6:	58 f0       	brcs	.+22     	; 0xd0e <__divsf3+0x24>
     cf8:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fp_pscA>
     cfc:	40 f0       	brcs	.+16     	; 0xd0e <__divsf3+0x24>
     cfe:	29 f4       	brne	.+10     	; 0xd0a <__divsf3+0x20>
     d00:	5f 3f       	cpi	r21, 0xFF	; 255
     d02:	29 f0       	breq	.+10     	; 0xd0e <__divsf3+0x24>
     d04:	0c 94 53 07 	jmp	0xea6	; 0xea6 <__fp_inf>
     d08:	51 11       	cpse	r21, r1
     d0a:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_szero>
     d0e:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__fp_nan>

00000d12 <__divsf3x>:
     d12:	0e 94 7b 07 	call	0xef6	; 0xef6 <__fp_split3>
     d16:	68 f3       	brcs	.-38     	; 0xcf2 <__divsf3+0x8>

00000d18 <__divsf3_pse>:
     d18:	99 23       	and	r25, r25
     d1a:	b1 f3       	breq	.-20     	; 0xd08 <__divsf3+0x1e>
     d1c:	55 23       	and	r21, r21
     d1e:	91 f3       	breq	.-28     	; 0xd04 <__divsf3+0x1a>
     d20:	95 1b       	sub	r25, r21
     d22:	55 0b       	sbc	r21, r21
     d24:	bb 27       	eor	r27, r27
     d26:	aa 27       	eor	r26, r26
     d28:	62 17       	cp	r22, r18
     d2a:	73 07       	cpc	r23, r19
     d2c:	84 07       	cpc	r24, r20
     d2e:	38 f0       	brcs	.+14     	; 0xd3e <__divsf3_pse+0x26>
     d30:	9f 5f       	subi	r25, 0xFF	; 255
     d32:	5f 4f       	sbci	r21, 0xFF	; 255
     d34:	22 0f       	add	r18, r18
     d36:	33 1f       	adc	r19, r19
     d38:	44 1f       	adc	r20, r20
     d3a:	aa 1f       	adc	r26, r26
     d3c:	a9 f3       	breq	.-22     	; 0xd28 <__divsf3_pse+0x10>
     d3e:	35 d0       	rcall	.+106    	; 0xdaa <__divsf3_pse+0x92>
     d40:	0e 2e       	mov	r0, r30
     d42:	3a f0       	brmi	.+14     	; 0xd52 <__divsf3_pse+0x3a>
     d44:	e0 e8       	ldi	r30, 0x80	; 128
     d46:	32 d0       	rcall	.+100    	; 0xdac <__divsf3_pse+0x94>
     d48:	91 50       	subi	r25, 0x01	; 1
     d4a:	50 40       	sbci	r21, 0x00	; 0
     d4c:	e6 95       	lsr	r30
     d4e:	00 1c       	adc	r0, r0
     d50:	ca f7       	brpl	.-14     	; 0xd44 <__divsf3_pse+0x2c>
     d52:	2b d0       	rcall	.+86     	; 0xdaa <__divsf3_pse+0x92>
     d54:	fe 2f       	mov	r31, r30
     d56:	29 d0       	rcall	.+82     	; 0xdaa <__divsf3_pse+0x92>
     d58:	66 0f       	add	r22, r22
     d5a:	77 1f       	adc	r23, r23
     d5c:	88 1f       	adc	r24, r24
     d5e:	bb 1f       	adc	r27, r27
     d60:	26 17       	cp	r18, r22
     d62:	37 07       	cpc	r19, r23
     d64:	48 07       	cpc	r20, r24
     d66:	ab 07       	cpc	r26, r27
     d68:	b0 e8       	ldi	r27, 0x80	; 128
     d6a:	09 f0       	breq	.+2      	; 0xd6e <__divsf3_pse+0x56>
     d6c:	bb 0b       	sbc	r27, r27
     d6e:	80 2d       	mov	r24, r0
     d70:	bf 01       	movw	r22, r30
     d72:	ff 27       	eor	r31, r31
     d74:	93 58       	subi	r25, 0x83	; 131
     d76:	5f 4f       	sbci	r21, 0xFF	; 255
     d78:	3a f0       	brmi	.+14     	; 0xd88 <__divsf3_pse+0x70>
     d7a:	9e 3f       	cpi	r25, 0xFE	; 254
     d7c:	51 05       	cpc	r21, r1
     d7e:	78 f0       	brcs	.+30     	; 0xd9e <__divsf3_pse+0x86>
     d80:	0c 94 53 07 	jmp	0xea6	; 0xea6 <__fp_inf>
     d84:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_szero>
     d88:	5f 3f       	cpi	r21, 0xFF	; 255
     d8a:	e4 f3       	brlt	.-8      	; 0xd84 <__divsf3_pse+0x6c>
     d8c:	98 3e       	cpi	r25, 0xE8	; 232
     d8e:	d4 f3       	brlt	.-12     	; 0xd84 <__divsf3_pse+0x6c>
     d90:	86 95       	lsr	r24
     d92:	77 95       	ror	r23
     d94:	67 95       	ror	r22
     d96:	b7 95       	ror	r27
     d98:	f7 95       	ror	r31
     d9a:	9f 5f       	subi	r25, 0xFF	; 255
     d9c:	c9 f7       	brne	.-14     	; 0xd90 <__divsf3_pse+0x78>
     d9e:	88 0f       	add	r24, r24
     da0:	91 1d       	adc	r25, r1
     da2:	96 95       	lsr	r25
     da4:	87 95       	ror	r24
     da6:	97 f9       	bld	r25, 7
     da8:	08 95       	ret
     daa:	e1 e0       	ldi	r30, 0x01	; 1
     dac:	66 0f       	add	r22, r22
     dae:	77 1f       	adc	r23, r23
     db0:	88 1f       	adc	r24, r24
     db2:	bb 1f       	adc	r27, r27
     db4:	62 17       	cp	r22, r18
     db6:	73 07       	cpc	r23, r19
     db8:	84 07       	cpc	r24, r20
     dba:	ba 07       	cpc	r27, r26
     dbc:	20 f0       	brcs	.+8      	; 0xdc6 <__divsf3_pse+0xae>
     dbe:	62 1b       	sub	r22, r18
     dc0:	73 0b       	sbc	r23, r19
     dc2:	84 0b       	sbc	r24, r20
     dc4:	ba 0b       	sbc	r27, r26
     dc6:	ee 1f       	adc	r30, r30
     dc8:	88 f7       	brcc	.-30     	; 0xdac <__divsf3_pse+0x94>
     dca:	e0 95       	com	r30
     dcc:	08 95       	ret

00000dce <__fixunssfsi>:
     dce:	0e 94 83 07 	call	0xf06	; 0xf06 <__fp_splitA>
     dd2:	88 f0       	brcs	.+34     	; 0xdf6 <__fixunssfsi+0x28>
     dd4:	9f 57       	subi	r25, 0x7F	; 127
     dd6:	98 f0       	brcs	.+38     	; 0xdfe <__fixunssfsi+0x30>
     dd8:	b9 2f       	mov	r27, r25
     dda:	99 27       	eor	r25, r25
     ddc:	b7 51       	subi	r27, 0x17	; 23
     dde:	b0 f0       	brcs	.+44     	; 0xe0c <__fixunssfsi+0x3e>
     de0:	e1 f0       	breq	.+56     	; 0xe1a <__fixunssfsi+0x4c>
     de2:	66 0f       	add	r22, r22
     de4:	77 1f       	adc	r23, r23
     de6:	88 1f       	adc	r24, r24
     de8:	99 1f       	adc	r25, r25
     dea:	1a f0       	brmi	.+6      	; 0xdf2 <__fixunssfsi+0x24>
     dec:	ba 95       	dec	r27
     dee:	c9 f7       	brne	.-14     	; 0xde2 <__fixunssfsi+0x14>
     df0:	14 c0       	rjmp	.+40     	; 0xe1a <__fixunssfsi+0x4c>
     df2:	b1 30       	cpi	r27, 0x01	; 1
     df4:	91 f0       	breq	.+36     	; 0xe1a <__fixunssfsi+0x4c>
     df6:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__fp_zero>
     dfa:	b1 e0       	ldi	r27, 0x01	; 1
     dfc:	08 95       	ret
     dfe:	0c 94 9d 07 	jmp	0xf3a	; 0xf3a <__fp_zero>
     e02:	67 2f       	mov	r22, r23
     e04:	78 2f       	mov	r23, r24
     e06:	88 27       	eor	r24, r24
     e08:	b8 5f       	subi	r27, 0xF8	; 248
     e0a:	39 f0       	breq	.+14     	; 0xe1a <__fixunssfsi+0x4c>
     e0c:	b9 3f       	cpi	r27, 0xF9	; 249
     e0e:	cc f3       	brlt	.-14     	; 0xe02 <__fixunssfsi+0x34>
     e10:	86 95       	lsr	r24
     e12:	77 95       	ror	r23
     e14:	67 95       	ror	r22
     e16:	b3 95       	inc	r27
     e18:	d9 f7       	brne	.-10     	; 0xe10 <__fixunssfsi+0x42>
     e1a:	3e f4       	brtc	.+14     	; 0xe2a <__fixunssfsi+0x5c>
     e1c:	90 95       	com	r25
     e1e:	80 95       	com	r24
     e20:	70 95       	com	r23
     e22:	61 95       	neg	r22
     e24:	7f 4f       	sbci	r23, 0xFF	; 255
     e26:	8f 4f       	sbci	r24, 0xFF	; 255
     e28:	9f 4f       	sbci	r25, 0xFF	; 255
     e2a:	08 95       	ret

00000e2c <__floatunsisf>:
     e2c:	e8 94       	clt
     e2e:	09 c0       	rjmp	.+18     	; 0xe42 <__floatsisf+0x12>

00000e30 <__floatsisf>:
     e30:	97 fb       	bst	r25, 7
     e32:	3e f4       	brtc	.+14     	; 0xe42 <__floatsisf+0x12>
     e34:	90 95       	com	r25
     e36:	80 95       	com	r24
     e38:	70 95       	com	r23
     e3a:	61 95       	neg	r22
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255
     e3e:	8f 4f       	sbci	r24, 0xFF	; 255
     e40:	9f 4f       	sbci	r25, 0xFF	; 255
     e42:	99 23       	and	r25, r25
     e44:	a9 f0       	breq	.+42     	; 0xe70 <__floatsisf+0x40>
     e46:	f9 2f       	mov	r31, r25
     e48:	96 e9       	ldi	r25, 0x96	; 150
     e4a:	bb 27       	eor	r27, r27
     e4c:	93 95       	inc	r25
     e4e:	f6 95       	lsr	r31
     e50:	87 95       	ror	r24
     e52:	77 95       	ror	r23
     e54:	67 95       	ror	r22
     e56:	b7 95       	ror	r27
     e58:	f1 11       	cpse	r31, r1
     e5a:	f8 cf       	rjmp	.-16     	; 0xe4c <__floatsisf+0x1c>
     e5c:	fa f4       	brpl	.+62     	; 0xe9c <__floatsisf+0x6c>
     e5e:	bb 0f       	add	r27, r27
     e60:	11 f4       	brne	.+4      	; 0xe66 <__floatsisf+0x36>
     e62:	60 ff       	sbrs	r22, 0
     e64:	1b c0       	rjmp	.+54     	; 0xe9c <__floatsisf+0x6c>
     e66:	6f 5f       	subi	r22, 0xFF	; 255
     e68:	7f 4f       	sbci	r23, 0xFF	; 255
     e6a:	8f 4f       	sbci	r24, 0xFF	; 255
     e6c:	9f 4f       	sbci	r25, 0xFF	; 255
     e6e:	16 c0       	rjmp	.+44     	; 0xe9c <__floatsisf+0x6c>
     e70:	88 23       	and	r24, r24
     e72:	11 f0       	breq	.+4      	; 0xe78 <__floatsisf+0x48>
     e74:	96 e9       	ldi	r25, 0x96	; 150
     e76:	11 c0       	rjmp	.+34     	; 0xe9a <__floatsisf+0x6a>
     e78:	77 23       	and	r23, r23
     e7a:	21 f0       	breq	.+8      	; 0xe84 <__floatsisf+0x54>
     e7c:	9e e8       	ldi	r25, 0x8E	; 142
     e7e:	87 2f       	mov	r24, r23
     e80:	76 2f       	mov	r23, r22
     e82:	05 c0       	rjmp	.+10     	; 0xe8e <__floatsisf+0x5e>
     e84:	66 23       	and	r22, r22
     e86:	71 f0       	breq	.+28     	; 0xea4 <__floatsisf+0x74>
     e88:	96 e8       	ldi	r25, 0x86	; 134
     e8a:	86 2f       	mov	r24, r22
     e8c:	70 e0       	ldi	r23, 0x00	; 0
     e8e:	60 e0       	ldi	r22, 0x00	; 0
     e90:	2a f0       	brmi	.+10     	; 0xe9c <__floatsisf+0x6c>
     e92:	9a 95       	dec	r25
     e94:	66 0f       	add	r22, r22
     e96:	77 1f       	adc	r23, r23
     e98:	88 1f       	adc	r24, r24
     e9a:	da f7       	brpl	.-10     	; 0xe92 <__floatsisf+0x62>
     e9c:	88 0f       	add	r24, r24
     e9e:	96 95       	lsr	r25
     ea0:	87 95       	ror	r24
     ea2:	97 f9       	bld	r25, 7
     ea4:	08 95       	ret

00000ea6 <__fp_inf>:
     ea6:	97 f9       	bld	r25, 7
     ea8:	9f 67       	ori	r25, 0x7F	; 127
     eaa:	80 e8       	ldi	r24, 0x80	; 128
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	60 e0       	ldi	r22, 0x00	; 0
     eb0:	08 95       	ret

00000eb2 <__fp_nan>:
     eb2:	9f ef       	ldi	r25, 0xFF	; 255
     eb4:	80 ec       	ldi	r24, 0xC0	; 192
     eb6:	08 95       	ret

00000eb8 <__fp_pscA>:
     eb8:	00 24       	eor	r0, r0
     eba:	0a 94       	dec	r0
     ebc:	16 16       	cp	r1, r22
     ebe:	17 06       	cpc	r1, r23
     ec0:	18 06       	cpc	r1, r24
     ec2:	09 06       	cpc	r0, r25
     ec4:	08 95       	ret

00000ec6 <__fp_pscB>:
     ec6:	00 24       	eor	r0, r0
     ec8:	0a 94       	dec	r0
     eca:	12 16       	cp	r1, r18
     ecc:	13 06       	cpc	r1, r19
     ece:	14 06       	cpc	r1, r20
     ed0:	05 06       	cpc	r0, r21
     ed2:	08 95       	ret

00000ed4 <__fp_round>:
     ed4:	09 2e       	mov	r0, r25
     ed6:	03 94       	inc	r0
     ed8:	00 0c       	add	r0, r0
     eda:	11 f4       	brne	.+4      	; 0xee0 <__fp_round+0xc>
     edc:	88 23       	and	r24, r24
     ede:	52 f0       	brmi	.+20     	; 0xef4 <__fp_round+0x20>
     ee0:	bb 0f       	add	r27, r27
     ee2:	40 f4       	brcc	.+16     	; 0xef4 <__fp_round+0x20>
     ee4:	bf 2b       	or	r27, r31
     ee6:	11 f4       	brne	.+4      	; 0xeec <__fp_round+0x18>
     ee8:	60 ff       	sbrs	r22, 0
     eea:	04 c0       	rjmp	.+8      	; 0xef4 <__fp_round+0x20>
     eec:	6f 5f       	subi	r22, 0xFF	; 255
     eee:	7f 4f       	sbci	r23, 0xFF	; 255
     ef0:	8f 4f       	sbci	r24, 0xFF	; 255
     ef2:	9f 4f       	sbci	r25, 0xFF	; 255
     ef4:	08 95       	ret

00000ef6 <__fp_split3>:
     ef6:	57 fd       	sbrc	r21, 7
     ef8:	90 58       	subi	r25, 0x80	; 128
     efa:	44 0f       	add	r20, r20
     efc:	55 1f       	adc	r21, r21
     efe:	59 f0       	breq	.+22     	; 0xf16 <__fp_splitA+0x10>
     f00:	5f 3f       	cpi	r21, 0xFF	; 255
     f02:	71 f0       	breq	.+28     	; 0xf20 <__fp_splitA+0x1a>
     f04:	47 95       	ror	r20

00000f06 <__fp_splitA>:
     f06:	88 0f       	add	r24, r24
     f08:	97 fb       	bst	r25, 7
     f0a:	99 1f       	adc	r25, r25
     f0c:	61 f0       	breq	.+24     	; 0xf26 <__fp_splitA+0x20>
     f0e:	9f 3f       	cpi	r25, 0xFF	; 255
     f10:	79 f0       	breq	.+30     	; 0xf30 <__fp_splitA+0x2a>
     f12:	87 95       	ror	r24
     f14:	08 95       	ret
     f16:	12 16       	cp	r1, r18
     f18:	13 06       	cpc	r1, r19
     f1a:	14 06       	cpc	r1, r20
     f1c:	55 1f       	adc	r21, r21
     f1e:	f2 cf       	rjmp	.-28     	; 0xf04 <__fp_split3+0xe>
     f20:	46 95       	lsr	r20
     f22:	f1 df       	rcall	.-30     	; 0xf06 <__fp_splitA>
     f24:	08 c0       	rjmp	.+16     	; 0xf36 <__fp_splitA+0x30>
     f26:	16 16       	cp	r1, r22
     f28:	17 06       	cpc	r1, r23
     f2a:	18 06       	cpc	r1, r24
     f2c:	99 1f       	adc	r25, r25
     f2e:	f1 cf       	rjmp	.-30     	; 0xf12 <__fp_splitA+0xc>
     f30:	86 95       	lsr	r24
     f32:	71 05       	cpc	r23, r1
     f34:	61 05       	cpc	r22, r1
     f36:	08 94       	sec
     f38:	08 95       	ret

00000f3a <__fp_zero>:
     f3a:	e8 94       	clt

00000f3c <__fp_szero>:
     f3c:	bb 27       	eor	r27, r27
     f3e:	66 27       	eor	r22, r22
     f40:	77 27       	eor	r23, r23
     f42:	cb 01       	movw	r24, r22
     f44:	97 f9       	bld	r25, 7
     f46:	08 95       	ret

00000f48 <__mulsf3>:
     f48:	0e 94 b7 07 	call	0xf6e	; 0xf6e <__mulsf3x>
     f4c:	0c 94 6a 07 	jmp	0xed4	; 0xed4 <__fp_round>
     f50:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fp_pscA>
     f54:	38 f0       	brcs	.+14     	; 0xf64 <__mulsf3+0x1c>
     f56:	0e 94 63 07 	call	0xec6	; 0xec6 <__fp_pscB>
     f5a:	20 f0       	brcs	.+8      	; 0xf64 <__mulsf3+0x1c>
     f5c:	95 23       	and	r25, r21
     f5e:	11 f0       	breq	.+4      	; 0xf64 <__mulsf3+0x1c>
     f60:	0c 94 53 07 	jmp	0xea6	; 0xea6 <__fp_inf>
     f64:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__fp_nan>
     f68:	11 24       	eor	r1, r1
     f6a:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_szero>

00000f6e <__mulsf3x>:
     f6e:	0e 94 7b 07 	call	0xef6	; 0xef6 <__fp_split3>
     f72:	70 f3       	brcs	.-36     	; 0xf50 <__mulsf3+0x8>

00000f74 <__mulsf3_pse>:
     f74:	95 9f       	mul	r25, r21
     f76:	c1 f3       	breq	.-16     	; 0xf68 <__mulsf3+0x20>
     f78:	95 0f       	add	r25, r21
     f7a:	50 e0       	ldi	r21, 0x00	; 0
     f7c:	55 1f       	adc	r21, r21
     f7e:	62 9f       	mul	r22, r18
     f80:	f0 01       	movw	r30, r0
     f82:	72 9f       	mul	r23, r18
     f84:	bb 27       	eor	r27, r27
     f86:	f0 0d       	add	r31, r0
     f88:	b1 1d       	adc	r27, r1
     f8a:	63 9f       	mul	r22, r19
     f8c:	aa 27       	eor	r26, r26
     f8e:	f0 0d       	add	r31, r0
     f90:	b1 1d       	adc	r27, r1
     f92:	aa 1f       	adc	r26, r26
     f94:	64 9f       	mul	r22, r20
     f96:	66 27       	eor	r22, r22
     f98:	b0 0d       	add	r27, r0
     f9a:	a1 1d       	adc	r26, r1
     f9c:	66 1f       	adc	r22, r22
     f9e:	82 9f       	mul	r24, r18
     fa0:	22 27       	eor	r18, r18
     fa2:	b0 0d       	add	r27, r0
     fa4:	a1 1d       	adc	r26, r1
     fa6:	62 1f       	adc	r22, r18
     fa8:	73 9f       	mul	r23, r19
     faa:	b0 0d       	add	r27, r0
     fac:	a1 1d       	adc	r26, r1
     fae:	62 1f       	adc	r22, r18
     fb0:	83 9f       	mul	r24, r19
     fb2:	a0 0d       	add	r26, r0
     fb4:	61 1d       	adc	r22, r1
     fb6:	22 1f       	adc	r18, r18
     fb8:	74 9f       	mul	r23, r20
     fba:	33 27       	eor	r19, r19
     fbc:	a0 0d       	add	r26, r0
     fbe:	61 1d       	adc	r22, r1
     fc0:	23 1f       	adc	r18, r19
     fc2:	84 9f       	mul	r24, r20
     fc4:	60 0d       	add	r22, r0
     fc6:	21 1d       	adc	r18, r1
     fc8:	82 2f       	mov	r24, r18
     fca:	76 2f       	mov	r23, r22
     fcc:	6a 2f       	mov	r22, r26
     fce:	11 24       	eor	r1, r1
     fd0:	9f 57       	subi	r25, 0x7F	; 127
     fd2:	50 40       	sbci	r21, 0x00	; 0
     fd4:	9a f0       	brmi	.+38     	; 0xffc <__mulsf3_pse+0x88>
     fd6:	f1 f0       	breq	.+60     	; 0x1014 <__EEPROM_REGION_LENGTH__+0x14>
     fd8:	88 23       	and	r24, r24
     fda:	4a f0       	brmi	.+18     	; 0xfee <__mulsf3_pse+0x7a>
     fdc:	ee 0f       	add	r30, r30
     fde:	ff 1f       	adc	r31, r31
     fe0:	bb 1f       	adc	r27, r27
     fe2:	66 1f       	adc	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	88 1f       	adc	r24, r24
     fe8:	91 50       	subi	r25, 0x01	; 1
     fea:	50 40       	sbci	r21, 0x00	; 0
     fec:	a9 f7       	brne	.-22     	; 0xfd8 <__mulsf3_pse+0x64>
     fee:	9e 3f       	cpi	r25, 0xFE	; 254
     ff0:	51 05       	cpc	r21, r1
     ff2:	80 f0       	brcs	.+32     	; 0x1014 <__EEPROM_REGION_LENGTH__+0x14>
     ff4:	0c 94 53 07 	jmp	0xea6	; 0xea6 <__fp_inf>
     ff8:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_szero>
     ffc:	5f 3f       	cpi	r21, 0xFF	; 255
     ffe:	e4 f3       	brlt	.-8      	; 0xff8 <__mulsf3_pse+0x84>
    1000:	98 3e       	cpi	r25, 0xE8	; 232
    1002:	d4 f3       	brlt	.-12     	; 0xff8 <__mulsf3_pse+0x84>
    1004:	86 95       	lsr	r24
    1006:	77 95       	ror	r23
    1008:	67 95       	ror	r22
    100a:	b7 95       	ror	r27
    100c:	f7 95       	ror	r31
    100e:	e7 95       	ror	r30
    1010:	9f 5f       	subi	r25, 0xFF	; 255
    1012:	c1 f7       	brne	.-16     	; 0x1004 <__EEPROM_REGION_LENGTH__+0x4>
    1014:	fe 2b       	or	r31, r30
    1016:	88 0f       	add	r24, r24
    1018:	91 1d       	adc	r25, r1
    101a:	96 95       	lsr	r25
    101c:	87 95       	ror	r24
    101e:	97 f9       	bld	r25, 7
    1020:	08 95       	ret

00001022 <round>:
    1022:	0e 94 83 07 	call	0xf06	; 0xf06 <__fp_splitA>
    1026:	e8 f0       	brcs	.+58     	; 0x1062 <round+0x40>
    1028:	9e 37       	cpi	r25, 0x7E	; 126
    102a:	e8 f0       	brcs	.+58     	; 0x1066 <round+0x44>
    102c:	96 39       	cpi	r25, 0x96	; 150
    102e:	b8 f4       	brcc	.+46     	; 0x105e <round+0x3c>
    1030:	9e 38       	cpi	r25, 0x8E	; 142
    1032:	48 f4       	brcc	.+18     	; 0x1046 <round+0x24>
    1034:	67 2f       	mov	r22, r23
    1036:	78 2f       	mov	r23, r24
    1038:	88 27       	eor	r24, r24
    103a:	98 5f       	subi	r25, 0xF8	; 248
    103c:	f9 cf       	rjmp	.-14     	; 0x1030 <round+0xe>
    103e:	86 95       	lsr	r24
    1040:	77 95       	ror	r23
    1042:	67 95       	ror	r22
    1044:	93 95       	inc	r25
    1046:	95 39       	cpi	r25, 0x95	; 149
    1048:	d0 f3       	brcs	.-12     	; 0x103e <round+0x1c>
    104a:	b6 2f       	mov	r27, r22
    104c:	b1 70       	andi	r27, 0x01	; 1
    104e:	6b 0f       	add	r22, r27
    1050:	71 1d       	adc	r23, r1
    1052:	81 1d       	adc	r24, r1
    1054:	20 f4       	brcc	.+8      	; 0x105e <round+0x3c>
    1056:	87 95       	ror	r24
    1058:	77 95       	ror	r23
    105a:	67 95       	ror	r22
    105c:	93 95       	inc	r25
    105e:	0c 94 35 08 	jmp	0x106a	; 0x106a <__fp_mintl>
    1062:	0c 94 50 08 	jmp	0x10a0	; 0x10a0 <__fp_mpack>
    1066:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_szero>

0000106a <__fp_mintl>:
    106a:	88 23       	and	r24, r24
    106c:	71 f4       	brne	.+28     	; 0x108a <__fp_mintl+0x20>
    106e:	77 23       	and	r23, r23
    1070:	21 f0       	breq	.+8      	; 0x107a <__fp_mintl+0x10>
    1072:	98 50       	subi	r25, 0x08	; 8
    1074:	87 2b       	or	r24, r23
    1076:	76 2f       	mov	r23, r22
    1078:	07 c0       	rjmp	.+14     	; 0x1088 <__fp_mintl+0x1e>
    107a:	66 23       	and	r22, r22
    107c:	11 f4       	brne	.+4      	; 0x1082 <__fp_mintl+0x18>
    107e:	99 27       	eor	r25, r25
    1080:	0d c0       	rjmp	.+26     	; 0x109c <__fp_mintl+0x32>
    1082:	90 51       	subi	r25, 0x10	; 16
    1084:	86 2b       	or	r24, r22
    1086:	70 e0       	ldi	r23, 0x00	; 0
    1088:	60 e0       	ldi	r22, 0x00	; 0
    108a:	2a f0       	brmi	.+10     	; 0x1096 <__fp_mintl+0x2c>
    108c:	9a 95       	dec	r25
    108e:	66 0f       	add	r22, r22
    1090:	77 1f       	adc	r23, r23
    1092:	88 1f       	adc	r24, r24
    1094:	da f7       	brpl	.-10     	; 0x108c <__fp_mintl+0x22>
    1096:	88 0f       	add	r24, r24
    1098:	96 95       	lsr	r25
    109a:	87 95       	ror	r24
    109c:	97 f9       	bld	r25, 7
    109e:	08 95       	ret

000010a0 <__fp_mpack>:
    10a0:	9f 3f       	cpi	r25, 0xFF	; 255
    10a2:	31 f0       	breq	.+12     	; 0x10b0 <__fp_mpack_finite+0xc>

000010a4 <__fp_mpack_finite>:
    10a4:	91 50       	subi	r25, 0x01	; 1
    10a6:	20 f4       	brcc	.+8      	; 0x10b0 <__fp_mpack_finite+0xc>
    10a8:	87 95       	ror	r24
    10aa:	77 95       	ror	r23
    10ac:	67 95       	ror	r22
    10ae:	b7 95       	ror	r27
    10b0:	88 0f       	add	r24, r24
    10b2:	91 1d       	adc	r25, r1
    10b4:	96 95       	lsr	r25
    10b6:	87 95       	ror	r24
    10b8:	97 f9       	bld	r25, 7
    10ba:	08 95       	ret

000010bc <vfprintf>:
    10bc:	2f 92       	push	r2
    10be:	3f 92       	push	r3
    10c0:	4f 92       	push	r4
    10c2:	5f 92       	push	r5
    10c4:	6f 92       	push	r6
    10c6:	7f 92       	push	r7
    10c8:	8f 92       	push	r8
    10ca:	9f 92       	push	r9
    10cc:	af 92       	push	r10
    10ce:	bf 92       	push	r11
    10d0:	cf 92       	push	r12
    10d2:	df 92       	push	r13
    10d4:	ef 92       	push	r14
    10d6:	ff 92       	push	r15
    10d8:	0f 93       	push	r16
    10da:	1f 93       	push	r17
    10dc:	cf 93       	push	r28
    10de:	df 93       	push	r29
    10e0:	cd b7       	in	r28, 0x3d	; 61
    10e2:	de b7       	in	r29, 0x3e	; 62
    10e4:	60 97       	sbiw	r28, 0x10	; 16
    10e6:	cd bf       	out	0x3d, r28	; 61
    10e8:	de bf       	out	0x3e, r29	; 62
    10ea:	7c 01       	movw	r14, r24
    10ec:	1b 01       	movw	r2, r22
    10ee:	6a 01       	movw	r12, r20
    10f0:	fc 01       	movw	r30, r24
    10f2:	16 82       	std	Z+6, r1	; 0x06
    10f4:	17 82       	std	Z+7, r1	; 0x07
    10f6:	83 81       	ldd	r24, Z+3	; 0x03
    10f8:	81 ff       	sbrs	r24, 1
    10fa:	44 c3       	rjmp	.+1672   	; 0x1784 <vfprintf+0x6c8>
    10fc:	9e 01       	movw	r18, r28
    10fe:	2f 5f       	subi	r18, 0xFF	; 255
    1100:	3f 4f       	sbci	r19, 0xFF	; 255
    1102:	39 01       	movw	r6, r18
    1104:	f7 01       	movw	r30, r14
    1106:	93 81       	ldd	r25, Z+3	; 0x03
    1108:	f1 01       	movw	r30, r2
    110a:	93 fd       	sbrc	r25, 3
    110c:	85 91       	lpm	r24, Z+
    110e:	93 ff       	sbrs	r25, 3
    1110:	81 91       	ld	r24, Z+
    1112:	1f 01       	movw	r2, r30
    1114:	88 23       	and	r24, r24
    1116:	09 f4       	brne	.+2      	; 0x111a <vfprintf+0x5e>
    1118:	31 c3       	rjmp	.+1634   	; 0x177c <vfprintf+0x6c0>
    111a:	85 32       	cpi	r24, 0x25	; 37
    111c:	39 f4       	brne	.+14     	; 0x112c <vfprintf+0x70>
    111e:	93 fd       	sbrc	r25, 3
    1120:	85 91       	lpm	r24, Z+
    1122:	93 ff       	sbrs	r25, 3
    1124:	81 91       	ld	r24, Z+
    1126:	1f 01       	movw	r2, r30
    1128:	85 32       	cpi	r24, 0x25	; 37
    112a:	39 f4       	brne	.+14     	; 0x113a <vfprintf+0x7e>
    112c:	b7 01       	movw	r22, r14
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1134:	56 01       	movw	r10, r12
    1136:	65 01       	movw	r12, r10
    1138:	e5 cf       	rjmp	.-54     	; 0x1104 <vfprintf+0x48>
    113a:	10 e0       	ldi	r17, 0x00	; 0
    113c:	51 2c       	mov	r5, r1
    113e:	91 2c       	mov	r9, r1
    1140:	ff e1       	ldi	r31, 0x1F	; 31
    1142:	f9 15       	cp	r31, r9
    1144:	d8 f0       	brcs	.+54     	; 0x117c <vfprintf+0xc0>
    1146:	8b 32       	cpi	r24, 0x2B	; 43
    1148:	79 f0       	breq	.+30     	; 0x1168 <vfprintf+0xac>
    114a:	38 f4       	brcc	.+14     	; 0x115a <vfprintf+0x9e>
    114c:	80 32       	cpi	r24, 0x20	; 32
    114e:	79 f0       	breq	.+30     	; 0x116e <vfprintf+0xb2>
    1150:	83 32       	cpi	r24, 0x23	; 35
    1152:	a1 f4       	brne	.+40     	; 0x117c <vfprintf+0xc0>
    1154:	f9 2d       	mov	r31, r9
    1156:	f0 61       	ori	r31, 0x10	; 16
    1158:	2e c0       	rjmp	.+92     	; 0x11b6 <vfprintf+0xfa>
    115a:	8d 32       	cpi	r24, 0x2D	; 45
    115c:	61 f0       	breq	.+24     	; 0x1176 <vfprintf+0xba>
    115e:	80 33       	cpi	r24, 0x30	; 48
    1160:	69 f4       	brne	.+26     	; 0x117c <vfprintf+0xc0>
    1162:	29 2d       	mov	r18, r9
    1164:	21 60       	ori	r18, 0x01	; 1
    1166:	2d c0       	rjmp	.+90     	; 0x11c2 <vfprintf+0x106>
    1168:	39 2d       	mov	r19, r9
    116a:	32 60       	ori	r19, 0x02	; 2
    116c:	93 2e       	mov	r9, r19
    116e:	89 2d       	mov	r24, r9
    1170:	84 60       	ori	r24, 0x04	; 4
    1172:	98 2e       	mov	r9, r24
    1174:	2a c0       	rjmp	.+84     	; 0x11ca <vfprintf+0x10e>
    1176:	e9 2d       	mov	r30, r9
    1178:	e8 60       	ori	r30, 0x08	; 8
    117a:	15 c0       	rjmp	.+42     	; 0x11a6 <vfprintf+0xea>
    117c:	97 fc       	sbrc	r9, 7
    117e:	2d c0       	rjmp	.+90     	; 0x11da <vfprintf+0x11e>
    1180:	20 ed       	ldi	r18, 0xD0	; 208
    1182:	28 0f       	add	r18, r24
    1184:	2a 30       	cpi	r18, 0x0A	; 10
    1186:	88 f4       	brcc	.+34     	; 0x11aa <vfprintf+0xee>
    1188:	96 fe       	sbrs	r9, 6
    118a:	06 c0       	rjmp	.+12     	; 0x1198 <vfprintf+0xdc>
    118c:	3a e0       	ldi	r19, 0x0A	; 10
    118e:	13 9f       	mul	r17, r19
    1190:	20 0d       	add	r18, r0
    1192:	11 24       	eor	r1, r1
    1194:	12 2f       	mov	r17, r18
    1196:	19 c0       	rjmp	.+50     	; 0x11ca <vfprintf+0x10e>
    1198:	8a e0       	ldi	r24, 0x0A	; 10
    119a:	58 9e       	mul	r5, r24
    119c:	20 0d       	add	r18, r0
    119e:	11 24       	eor	r1, r1
    11a0:	52 2e       	mov	r5, r18
    11a2:	e9 2d       	mov	r30, r9
    11a4:	e0 62       	ori	r30, 0x20	; 32
    11a6:	9e 2e       	mov	r9, r30
    11a8:	10 c0       	rjmp	.+32     	; 0x11ca <vfprintf+0x10e>
    11aa:	8e 32       	cpi	r24, 0x2E	; 46
    11ac:	31 f4       	brne	.+12     	; 0x11ba <vfprintf+0xfe>
    11ae:	96 fc       	sbrc	r9, 6
    11b0:	e5 c2       	rjmp	.+1482   	; 0x177c <vfprintf+0x6c0>
    11b2:	f9 2d       	mov	r31, r9
    11b4:	f0 64       	ori	r31, 0x40	; 64
    11b6:	9f 2e       	mov	r9, r31
    11b8:	08 c0       	rjmp	.+16     	; 0x11ca <vfprintf+0x10e>
    11ba:	8c 36       	cpi	r24, 0x6C	; 108
    11bc:	21 f4       	brne	.+8      	; 0x11c6 <vfprintf+0x10a>
    11be:	29 2d       	mov	r18, r9
    11c0:	20 68       	ori	r18, 0x80	; 128
    11c2:	92 2e       	mov	r9, r18
    11c4:	02 c0       	rjmp	.+4      	; 0x11ca <vfprintf+0x10e>
    11c6:	88 36       	cpi	r24, 0x68	; 104
    11c8:	41 f4       	brne	.+16     	; 0x11da <vfprintf+0x11e>
    11ca:	f1 01       	movw	r30, r2
    11cc:	93 fd       	sbrc	r25, 3
    11ce:	85 91       	lpm	r24, Z+
    11d0:	93 ff       	sbrs	r25, 3
    11d2:	81 91       	ld	r24, Z+
    11d4:	1f 01       	movw	r2, r30
    11d6:	81 11       	cpse	r24, r1
    11d8:	b3 cf       	rjmp	.-154    	; 0x1140 <vfprintf+0x84>
    11da:	9b eb       	ldi	r25, 0xBB	; 187
    11dc:	98 0f       	add	r25, r24
    11de:	93 30       	cpi	r25, 0x03	; 3
    11e0:	20 f4       	brcc	.+8      	; 0x11ea <vfprintf+0x12e>
    11e2:	99 2d       	mov	r25, r9
    11e4:	90 61       	ori	r25, 0x10	; 16
    11e6:	80 5e       	subi	r24, 0xE0	; 224
    11e8:	07 c0       	rjmp	.+14     	; 0x11f8 <vfprintf+0x13c>
    11ea:	9b e9       	ldi	r25, 0x9B	; 155
    11ec:	98 0f       	add	r25, r24
    11ee:	93 30       	cpi	r25, 0x03	; 3
    11f0:	08 f0       	brcs	.+2      	; 0x11f4 <vfprintf+0x138>
    11f2:	66 c1       	rjmp	.+716    	; 0x14c0 <vfprintf+0x404>
    11f4:	99 2d       	mov	r25, r9
    11f6:	9f 7e       	andi	r25, 0xEF	; 239
    11f8:	96 ff       	sbrs	r25, 6
    11fa:	16 e0       	ldi	r17, 0x06	; 6
    11fc:	9f 73       	andi	r25, 0x3F	; 63
    11fe:	99 2e       	mov	r9, r25
    1200:	85 36       	cpi	r24, 0x65	; 101
    1202:	19 f4       	brne	.+6      	; 0x120a <vfprintf+0x14e>
    1204:	90 64       	ori	r25, 0x40	; 64
    1206:	99 2e       	mov	r9, r25
    1208:	08 c0       	rjmp	.+16     	; 0x121a <vfprintf+0x15e>
    120a:	86 36       	cpi	r24, 0x66	; 102
    120c:	21 f4       	brne	.+8      	; 0x1216 <vfprintf+0x15a>
    120e:	39 2f       	mov	r19, r25
    1210:	30 68       	ori	r19, 0x80	; 128
    1212:	93 2e       	mov	r9, r19
    1214:	02 c0       	rjmp	.+4      	; 0x121a <vfprintf+0x15e>
    1216:	11 11       	cpse	r17, r1
    1218:	11 50       	subi	r17, 0x01	; 1
    121a:	97 fe       	sbrs	r9, 7
    121c:	07 c0       	rjmp	.+14     	; 0x122c <vfprintf+0x170>
    121e:	1c 33       	cpi	r17, 0x3C	; 60
    1220:	50 f4       	brcc	.+20     	; 0x1236 <vfprintf+0x17a>
    1222:	44 24       	eor	r4, r4
    1224:	43 94       	inc	r4
    1226:	41 0e       	add	r4, r17
    1228:	27 e0       	ldi	r18, 0x07	; 7
    122a:	0b c0       	rjmp	.+22     	; 0x1242 <vfprintf+0x186>
    122c:	18 30       	cpi	r17, 0x08	; 8
    122e:	38 f0       	brcs	.+14     	; 0x123e <vfprintf+0x182>
    1230:	27 e0       	ldi	r18, 0x07	; 7
    1232:	17 e0       	ldi	r17, 0x07	; 7
    1234:	05 c0       	rjmp	.+10     	; 0x1240 <vfprintf+0x184>
    1236:	27 e0       	ldi	r18, 0x07	; 7
    1238:	9c e3       	ldi	r25, 0x3C	; 60
    123a:	49 2e       	mov	r4, r25
    123c:	02 c0       	rjmp	.+4      	; 0x1242 <vfprintf+0x186>
    123e:	21 2f       	mov	r18, r17
    1240:	41 2c       	mov	r4, r1
    1242:	56 01       	movw	r10, r12
    1244:	84 e0       	ldi	r24, 0x04	; 4
    1246:	a8 0e       	add	r10, r24
    1248:	b1 1c       	adc	r11, r1
    124a:	f6 01       	movw	r30, r12
    124c:	60 81       	ld	r22, Z
    124e:	71 81       	ldd	r23, Z+1	; 0x01
    1250:	82 81       	ldd	r24, Z+2	; 0x02
    1252:	93 81       	ldd	r25, Z+3	; 0x03
    1254:	04 2d       	mov	r16, r4
    1256:	a3 01       	movw	r20, r6
    1258:	0e 94 26 0c 	call	0x184c	; 0x184c <__ftoa_engine>
    125c:	6c 01       	movw	r12, r24
    125e:	f9 81       	ldd	r31, Y+1	; 0x01
    1260:	fc 87       	std	Y+12, r31	; 0x0c
    1262:	f0 ff       	sbrs	r31, 0
    1264:	02 c0       	rjmp	.+4      	; 0x126a <vfprintf+0x1ae>
    1266:	f3 ff       	sbrs	r31, 3
    1268:	06 c0       	rjmp	.+12     	; 0x1276 <vfprintf+0x1ba>
    126a:	91 fc       	sbrc	r9, 1
    126c:	06 c0       	rjmp	.+12     	; 0x127a <vfprintf+0x1be>
    126e:	92 fe       	sbrs	r9, 2
    1270:	06 c0       	rjmp	.+12     	; 0x127e <vfprintf+0x1c2>
    1272:	00 e2       	ldi	r16, 0x20	; 32
    1274:	05 c0       	rjmp	.+10     	; 0x1280 <vfprintf+0x1c4>
    1276:	0d e2       	ldi	r16, 0x2D	; 45
    1278:	03 c0       	rjmp	.+6      	; 0x1280 <vfprintf+0x1c4>
    127a:	0b e2       	ldi	r16, 0x2B	; 43
    127c:	01 c0       	rjmp	.+2      	; 0x1280 <vfprintf+0x1c4>
    127e:	00 e0       	ldi	r16, 0x00	; 0
    1280:	8c 85       	ldd	r24, Y+12	; 0x0c
    1282:	8c 70       	andi	r24, 0x0C	; 12
    1284:	19 f0       	breq	.+6      	; 0x128c <vfprintf+0x1d0>
    1286:	01 11       	cpse	r16, r1
    1288:	5a c2       	rjmp	.+1204   	; 0x173e <vfprintf+0x682>
    128a:	9b c2       	rjmp	.+1334   	; 0x17c2 <vfprintf+0x706>
    128c:	97 fe       	sbrs	r9, 7
    128e:	10 c0       	rjmp	.+32     	; 0x12b0 <vfprintf+0x1f4>
    1290:	4c 0c       	add	r4, r12
    1292:	fc 85       	ldd	r31, Y+12	; 0x0c
    1294:	f4 ff       	sbrs	r31, 4
    1296:	04 c0       	rjmp	.+8      	; 0x12a0 <vfprintf+0x1e4>
    1298:	8a 81       	ldd	r24, Y+2	; 0x02
    129a:	81 33       	cpi	r24, 0x31	; 49
    129c:	09 f4       	brne	.+2      	; 0x12a0 <vfprintf+0x1e4>
    129e:	4a 94       	dec	r4
    12a0:	14 14       	cp	r1, r4
    12a2:	74 f5       	brge	.+92     	; 0x1300 <vfprintf+0x244>
    12a4:	28 e0       	ldi	r18, 0x08	; 8
    12a6:	24 15       	cp	r18, r4
    12a8:	78 f5       	brcc	.+94     	; 0x1308 <vfprintf+0x24c>
    12aa:	88 e0       	ldi	r24, 0x08	; 8
    12ac:	48 2e       	mov	r4, r24
    12ae:	2c c0       	rjmp	.+88     	; 0x1308 <vfprintf+0x24c>
    12b0:	96 fc       	sbrc	r9, 6
    12b2:	2a c0       	rjmp	.+84     	; 0x1308 <vfprintf+0x24c>
    12b4:	81 2f       	mov	r24, r17
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	8c 15       	cp	r24, r12
    12ba:	9d 05       	cpc	r25, r13
    12bc:	9c f0       	brlt	.+38     	; 0x12e4 <vfprintf+0x228>
    12be:	3c ef       	ldi	r19, 0xFC	; 252
    12c0:	c3 16       	cp	r12, r19
    12c2:	3f ef       	ldi	r19, 0xFF	; 255
    12c4:	d3 06       	cpc	r13, r19
    12c6:	74 f0       	brlt	.+28     	; 0x12e4 <vfprintf+0x228>
    12c8:	89 2d       	mov	r24, r9
    12ca:	80 68       	ori	r24, 0x80	; 128
    12cc:	98 2e       	mov	r9, r24
    12ce:	0a c0       	rjmp	.+20     	; 0x12e4 <vfprintf+0x228>
    12d0:	e2 e0       	ldi	r30, 0x02	; 2
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	ec 0f       	add	r30, r28
    12d6:	fd 1f       	adc	r31, r29
    12d8:	e1 0f       	add	r30, r17
    12da:	f1 1d       	adc	r31, r1
    12dc:	80 81       	ld	r24, Z
    12de:	80 33       	cpi	r24, 0x30	; 48
    12e0:	19 f4       	brne	.+6      	; 0x12e8 <vfprintf+0x22c>
    12e2:	11 50       	subi	r17, 0x01	; 1
    12e4:	11 11       	cpse	r17, r1
    12e6:	f4 cf       	rjmp	.-24     	; 0x12d0 <vfprintf+0x214>
    12e8:	97 fe       	sbrs	r9, 7
    12ea:	0e c0       	rjmp	.+28     	; 0x1308 <vfprintf+0x24c>
    12ec:	44 24       	eor	r4, r4
    12ee:	43 94       	inc	r4
    12f0:	41 0e       	add	r4, r17
    12f2:	81 2f       	mov	r24, r17
    12f4:	90 e0       	ldi	r25, 0x00	; 0
    12f6:	c8 16       	cp	r12, r24
    12f8:	d9 06       	cpc	r13, r25
    12fa:	2c f4       	brge	.+10     	; 0x1306 <vfprintf+0x24a>
    12fc:	1c 19       	sub	r17, r12
    12fe:	04 c0       	rjmp	.+8      	; 0x1308 <vfprintf+0x24c>
    1300:	44 24       	eor	r4, r4
    1302:	43 94       	inc	r4
    1304:	01 c0       	rjmp	.+2      	; 0x1308 <vfprintf+0x24c>
    1306:	10 e0       	ldi	r17, 0x00	; 0
    1308:	97 fe       	sbrs	r9, 7
    130a:	06 c0       	rjmp	.+12     	; 0x1318 <vfprintf+0x25c>
    130c:	1c 14       	cp	r1, r12
    130e:	1d 04       	cpc	r1, r13
    1310:	34 f4       	brge	.+12     	; 0x131e <vfprintf+0x262>
    1312:	c6 01       	movw	r24, r12
    1314:	01 96       	adiw	r24, 0x01	; 1
    1316:	05 c0       	rjmp	.+10     	; 0x1322 <vfprintf+0x266>
    1318:	85 e0       	ldi	r24, 0x05	; 5
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	02 c0       	rjmp	.+4      	; 0x1322 <vfprintf+0x266>
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	01 11       	cpse	r16, r1
    1324:	01 96       	adiw	r24, 0x01	; 1
    1326:	11 23       	and	r17, r17
    1328:	31 f0       	breq	.+12     	; 0x1336 <vfprintf+0x27a>
    132a:	21 2f       	mov	r18, r17
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	2f 5f       	subi	r18, 0xFF	; 255
    1330:	3f 4f       	sbci	r19, 0xFF	; 255
    1332:	82 0f       	add	r24, r18
    1334:	93 1f       	adc	r25, r19
    1336:	25 2d       	mov	r18, r5
    1338:	30 e0       	ldi	r19, 0x00	; 0
    133a:	82 17       	cp	r24, r18
    133c:	93 07       	cpc	r25, r19
    133e:	14 f4       	brge	.+4      	; 0x1344 <vfprintf+0x288>
    1340:	58 1a       	sub	r5, r24
    1342:	01 c0       	rjmp	.+2      	; 0x1346 <vfprintf+0x28a>
    1344:	51 2c       	mov	r5, r1
    1346:	89 2d       	mov	r24, r9
    1348:	89 70       	andi	r24, 0x09	; 9
    134a:	49 f4       	brne	.+18     	; 0x135e <vfprintf+0x2a2>
    134c:	55 20       	and	r5, r5
    134e:	39 f0       	breq	.+14     	; 0x135e <vfprintf+0x2a2>
    1350:	b7 01       	movw	r22, r14
    1352:	80 e2       	ldi	r24, 0x20	; 32
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    135a:	5a 94       	dec	r5
    135c:	f7 cf       	rjmp	.-18     	; 0x134c <vfprintf+0x290>
    135e:	00 23       	and	r16, r16
    1360:	29 f0       	breq	.+10     	; 0x136c <vfprintf+0x2b0>
    1362:	b7 01       	movw	r22, r14
    1364:	80 2f       	mov	r24, r16
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    136c:	93 fc       	sbrc	r9, 3
    136e:	09 c0       	rjmp	.+18     	; 0x1382 <vfprintf+0x2c6>
    1370:	55 20       	and	r5, r5
    1372:	39 f0       	breq	.+14     	; 0x1382 <vfprintf+0x2c6>
    1374:	b7 01       	movw	r22, r14
    1376:	80 e3       	ldi	r24, 0x30	; 48
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    137e:	5a 94       	dec	r5
    1380:	f7 cf       	rjmp	.-18     	; 0x1370 <vfprintf+0x2b4>
    1382:	97 fe       	sbrs	r9, 7
    1384:	4c c0       	rjmp	.+152    	; 0x141e <vfprintf+0x362>
    1386:	46 01       	movw	r8, r12
    1388:	d7 fe       	sbrs	r13, 7
    138a:	02 c0       	rjmp	.+4      	; 0x1390 <vfprintf+0x2d4>
    138c:	81 2c       	mov	r8, r1
    138e:	91 2c       	mov	r9, r1
    1390:	c6 01       	movw	r24, r12
    1392:	88 19       	sub	r24, r8
    1394:	99 09       	sbc	r25, r9
    1396:	f3 01       	movw	r30, r6
    1398:	e8 0f       	add	r30, r24
    139a:	f9 1f       	adc	r31, r25
    139c:	ed 87       	std	Y+13, r30	; 0x0d
    139e:	fe 87       	std	Y+14, r31	; 0x0e
    13a0:	96 01       	movw	r18, r12
    13a2:	24 19       	sub	r18, r4
    13a4:	31 09       	sbc	r19, r1
    13a6:	2f 87       	std	Y+15, r18	; 0x0f
    13a8:	38 8b       	std	Y+16, r19	; 0x10
    13aa:	01 2f       	mov	r16, r17
    13ac:	10 e0       	ldi	r17, 0x00	; 0
    13ae:	11 95       	neg	r17
    13b0:	01 95       	neg	r16
    13b2:	11 09       	sbc	r17, r1
    13b4:	3f ef       	ldi	r19, 0xFF	; 255
    13b6:	83 16       	cp	r8, r19
    13b8:	93 06       	cpc	r9, r19
    13ba:	29 f4       	brne	.+10     	; 0x13c6 <vfprintf+0x30a>
    13bc:	b7 01       	movw	r22, r14
    13be:	8e e2       	ldi	r24, 0x2E	; 46
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    13c6:	c8 14       	cp	r12, r8
    13c8:	d9 04       	cpc	r13, r9
    13ca:	4c f0       	brlt	.+18     	; 0x13de <vfprintf+0x322>
    13cc:	8f 85       	ldd	r24, Y+15	; 0x0f
    13ce:	98 89       	ldd	r25, Y+16	; 0x10
    13d0:	88 15       	cp	r24, r8
    13d2:	99 05       	cpc	r25, r9
    13d4:	24 f4       	brge	.+8      	; 0x13de <vfprintf+0x322>
    13d6:	ed 85       	ldd	r30, Y+13	; 0x0d
    13d8:	fe 85       	ldd	r31, Y+14	; 0x0e
    13da:	81 81       	ldd	r24, Z+1	; 0x01
    13dc:	01 c0       	rjmp	.+2      	; 0x13e0 <vfprintf+0x324>
    13de:	80 e3       	ldi	r24, 0x30	; 48
    13e0:	f1 e0       	ldi	r31, 0x01	; 1
    13e2:	8f 1a       	sub	r8, r31
    13e4:	91 08       	sbc	r9, r1
    13e6:	2d 85       	ldd	r18, Y+13	; 0x0d
    13e8:	3e 85       	ldd	r19, Y+14	; 0x0e
    13ea:	2f 5f       	subi	r18, 0xFF	; 255
    13ec:	3f 4f       	sbci	r19, 0xFF	; 255
    13ee:	2d 87       	std	Y+13, r18	; 0x0d
    13f0:	3e 87       	std	Y+14, r19	; 0x0e
    13f2:	80 16       	cp	r8, r16
    13f4:	91 06       	cpc	r9, r17
    13f6:	2c f0       	brlt	.+10     	; 0x1402 <vfprintf+0x346>
    13f8:	b7 01       	movw	r22, r14
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1400:	d9 cf       	rjmp	.-78     	; 0x13b4 <vfprintf+0x2f8>
    1402:	c8 14       	cp	r12, r8
    1404:	d9 04       	cpc	r13, r9
    1406:	41 f4       	brne	.+16     	; 0x1418 <vfprintf+0x35c>
    1408:	9a 81       	ldd	r25, Y+2	; 0x02
    140a:	96 33       	cpi	r25, 0x36	; 54
    140c:	20 f4       	brcc	.+8      	; 0x1416 <vfprintf+0x35a>
    140e:	95 33       	cpi	r25, 0x35	; 53
    1410:	19 f4       	brne	.+6      	; 0x1418 <vfprintf+0x35c>
    1412:	3c 85       	ldd	r19, Y+12	; 0x0c
    1414:	34 ff       	sbrs	r19, 4
    1416:	81 e3       	ldi	r24, 0x31	; 49
    1418:	b7 01       	movw	r22, r14
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	4e c0       	rjmp	.+156    	; 0x14ba <vfprintf+0x3fe>
    141e:	8a 81       	ldd	r24, Y+2	; 0x02
    1420:	81 33       	cpi	r24, 0x31	; 49
    1422:	19 f0       	breq	.+6      	; 0x142a <vfprintf+0x36e>
    1424:	9c 85       	ldd	r25, Y+12	; 0x0c
    1426:	9f 7e       	andi	r25, 0xEF	; 239
    1428:	9c 87       	std	Y+12, r25	; 0x0c
    142a:	b7 01       	movw	r22, r14
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1432:	11 11       	cpse	r17, r1
    1434:	05 c0       	rjmp	.+10     	; 0x1440 <vfprintf+0x384>
    1436:	94 fc       	sbrc	r9, 4
    1438:	18 c0       	rjmp	.+48     	; 0x146a <vfprintf+0x3ae>
    143a:	85 e6       	ldi	r24, 0x65	; 101
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	17 c0       	rjmp	.+46     	; 0x146e <vfprintf+0x3b2>
    1440:	b7 01       	movw	r22, r14
    1442:	8e e2       	ldi	r24, 0x2E	; 46
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    144a:	1e 5f       	subi	r17, 0xFE	; 254
    144c:	82 e0       	ldi	r24, 0x02	; 2
    144e:	01 e0       	ldi	r16, 0x01	; 1
    1450:	08 0f       	add	r16, r24
    1452:	f3 01       	movw	r30, r6
    1454:	e8 0f       	add	r30, r24
    1456:	f1 1d       	adc	r31, r1
    1458:	80 81       	ld	r24, Z
    145a:	b7 01       	movw	r22, r14
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1462:	80 2f       	mov	r24, r16
    1464:	01 13       	cpse	r16, r17
    1466:	f3 cf       	rjmp	.-26     	; 0x144e <vfprintf+0x392>
    1468:	e6 cf       	rjmp	.-52     	; 0x1436 <vfprintf+0x37a>
    146a:	85 e4       	ldi	r24, 0x45	; 69
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	b7 01       	movw	r22, r14
    1470:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1474:	d7 fc       	sbrc	r13, 7
    1476:	06 c0       	rjmp	.+12     	; 0x1484 <vfprintf+0x3c8>
    1478:	c1 14       	cp	r12, r1
    147a:	d1 04       	cpc	r13, r1
    147c:	41 f4       	brne	.+16     	; 0x148e <vfprintf+0x3d2>
    147e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1480:	e4 ff       	sbrs	r30, 4
    1482:	05 c0       	rjmp	.+10     	; 0x148e <vfprintf+0x3d2>
    1484:	d1 94       	neg	r13
    1486:	c1 94       	neg	r12
    1488:	d1 08       	sbc	r13, r1
    148a:	8d e2       	ldi	r24, 0x2D	; 45
    148c:	01 c0       	rjmp	.+2      	; 0x1490 <vfprintf+0x3d4>
    148e:	8b e2       	ldi	r24, 0x2B	; 43
    1490:	b7 01       	movw	r22, r14
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1498:	80 e3       	ldi	r24, 0x30	; 48
    149a:	2a e0       	ldi	r18, 0x0A	; 10
    149c:	c2 16       	cp	r12, r18
    149e:	d1 04       	cpc	r13, r1
    14a0:	2c f0       	brlt	.+10     	; 0x14ac <vfprintf+0x3f0>
    14a2:	8f 5f       	subi	r24, 0xFF	; 255
    14a4:	fa e0       	ldi	r31, 0x0A	; 10
    14a6:	cf 1a       	sub	r12, r31
    14a8:	d1 08       	sbc	r13, r1
    14aa:	f7 cf       	rjmp	.-18     	; 0x149a <vfprintf+0x3de>
    14ac:	b7 01       	movw	r22, r14
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    14b4:	b7 01       	movw	r22, r14
    14b6:	c6 01       	movw	r24, r12
    14b8:	c0 96       	adiw	r24, 0x30	; 48
    14ba:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    14be:	54 c1       	rjmp	.+680    	; 0x1768 <vfprintf+0x6ac>
    14c0:	83 36       	cpi	r24, 0x63	; 99
    14c2:	31 f0       	breq	.+12     	; 0x14d0 <vfprintf+0x414>
    14c4:	83 37       	cpi	r24, 0x73	; 115
    14c6:	79 f0       	breq	.+30     	; 0x14e6 <vfprintf+0x42a>
    14c8:	83 35       	cpi	r24, 0x53	; 83
    14ca:	09 f0       	breq	.+2      	; 0x14ce <vfprintf+0x412>
    14cc:	56 c0       	rjmp	.+172    	; 0x157a <vfprintf+0x4be>
    14ce:	20 c0       	rjmp	.+64     	; 0x1510 <vfprintf+0x454>
    14d0:	56 01       	movw	r10, r12
    14d2:	32 e0       	ldi	r19, 0x02	; 2
    14d4:	a3 0e       	add	r10, r19
    14d6:	b1 1c       	adc	r11, r1
    14d8:	f6 01       	movw	r30, r12
    14da:	80 81       	ld	r24, Z
    14dc:	89 83       	std	Y+1, r24	; 0x01
    14de:	01 e0       	ldi	r16, 0x01	; 1
    14e0:	10 e0       	ldi	r17, 0x00	; 0
    14e2:	63 01       	movw	r12, r6
    14e4:	12 c0       	rjmp	.+36     	; 0x150a <vfprintf+0x44e>
    14e6:	56 01       	movw	r10, r12
    14e8:	f2 e0       	ldi	r31, 0x02	; 2
    14ea:	af 0e       	add	r10, r31
    14ec:	b1 1c       	adc	r11, r1
    14ee:	f6 01       	movw	r30, r12
    14f0:	c0 80       	ld	r12, Z
    14f2:	d1 80       	ldd	r13, Z+1	; 0x01
    14f4:	96 fe       	sbrs	r9, 6
    14f6:	03 c0       	rjmp	.+6      	; 0x14fe <vfprintf+0x442>
    14f8:	61 2f       	mov	r22, r17
    14fa:	70 e0       	ldi	r23, 0x00	; 0
    14fc:	02 c0       	rjmp	.+4      	; 0x1502 <vfprintf+0x446>
    14fe:	6f ef       	ldi	r22, 0xFF	; 255
    1500:	7f ef       	ldi	r23, 0xFF	; 255
    1502:	c6 01       	movw	r24, r12
    1504:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <strnlen>
    1508:	8c 01       	movw	r16, r24
    150a:	f9 2d       	mov	r31, r9
    150c:	ff 77       	andi	r31, 0x7F	; 127
    150e:	14 c0       	rjmp	.+40     	; 0x1538 <vfprintf+0x47c>
    1510:	56 01       	movw	r10, r12
    1512:	22 e0       	ldi	r18, 0x02	; 2
    1514:	a2 0e       	add	r10, r18
    1516:	b1 1c       	adc	r11, r1
    1518:	f6 01       	movw	r30, r12
    151a:	c0 80       	ld	r12, Z
    151c:	d1 80       	ldd	r13, Z+1	; 0x01
    151e:	96 fe       	sbrs	r9, 6
    1520:	03 c0       	rjmp	.+6      	; 0x1528 <vfprintf+0x46c>
    1522:	61 2f       	mov	r22, r17
    1524:	70 e0       	ldi	r23, 0x00	; 0
    1526:	02 c0       	rjmp	.+4      	; 0x152c <vfprintf+0x470>
    1528:	6f ef       	ldi	r22, 0xFF	; 255
    152a:	7f ef       	ldi	r23, 0xFF	; 255
    152c:	c6 01       	movw	r24, r12
    152e:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <strnlen_P>
    1532:	8c 01       	movw	r16, r24
    1534:	f9 2d       	mov	r31, r9
    1536:	f0 68       	ori	r31, 0x80	; 128
    1538:	9f 2e       	mov	r9, r31
    153a:	f3 fd       	sbrc	r31, 3
    153c:	1a c0       	rjmp	.+52     	; 0x1572 <vfprintf+0x4b6>
    153e:	85 2d       	mov	r24, r5
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	08 17       	cp	r16, r24
    1544:	19 07       	cpc	r17, r25
    1546:	a8 f4       	brcc	.+42     	; 0x1572 <vfprintf+0x4b6>
    1548:	b7 01       	movw	r22, r14
    154a:	80 e2       	ldi	r24, 0x20	; 32
    154c:	90 e0       	ldi	r25, 0x00	; 0
    154e:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1552:	5a 94       	dec	r5
    1554:	f4 cf       	rjmp	.-24     	; 0x153e <vfprintf+0x482>
    1556:	f6 01       	movw	r30, r12
    1558:	97 fc       	sbrc	r9, 7
    155a:	85 91       	lpm	r24, Z+
    155c:	97 fe       	sbrs	r9, 7
    155e:	81 91       	ld	r24, Z+
    1560:	6f 01       	movw	r12, r30
    1562:	b7 01       	movw	r22, r14
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    156a:	51 10       	cpse	r5, r1
    156c:	5a 94       	dec	r5
    156e:	01 50       	subi	r16, 0x01	; 1
    1570:	11 09       	sbc	r17, r1
    1572:	01 15       	cp	r16, r1
    1574:	11 05       	cpc	r17, r1
    1576:	79 f7       	brne	.-34     	; 0x1556 <vfprintf+0x49a>
    1578:	f7 c0       	rjmp	.+494    	; 0x1768 <vfprintf+0x6ac>
    157a:	84 36       	cpi	r24, 0x64	; 100
    157c:	11 f0       	breq	.+4      	; 0x1582 <vfprintf+0x4c6>
    157e:	89 36       	cpi	r24, 0x69	; 105
    1580:	61 f5       	brne	.+88     	; 0x15da <vfprintf+0x51e>
    1582:	56 01       	movw	r10, r12
    1584:	97 fe       	sbrs	r9, 7
    1586:	09 c0       	rjmp	.+18     	; 0x159a <vfprintf+0x4de>
    1588:	24 e0       	ldi	r18, 0x04	; 4
    158a:	a2 0e       	add	r10, r18
    158c:	b1 1c       	adc	r11, r1
    158e:	f6 01       	movw	r30, r12
    1590:	60 81       	ld	r22, Z
    1592:	71 81       	ldd	r23, Z+1	; 0x01
    1594:	82 81       	ldd	r24, Z+2	; 0x02
    1596:	93 81       	ldd	r25, Z+3	; 0x03
    1598:	0a c0       	rjmp	.+20     	; 0x15ae <vfprintf+0x4f2>
    159a:	f2 e0       	ldi	r31, 0x02	; 2
    159c:	af 0e       	add	r10, r31
    159e:	b1 1c       	adc	r11, r1
    15a0:	f6 01       	movw	r30, r12
    15a2:	60 81       	ld	r22, Z
    15a4:	71 81       	ldd	r23, Z+1	; 0x01
    15a6:	07 2e       	mov	r0, r23
    15a8:	00 0c       	add	r0, r0
    15aa:	88 0b       	sbc	r24, r24
    15ac:	99 0b       	sbc	r25, r25
    15ae:	f9 2d       	mov	r31, r9
    15b0:	ff 76       	andi	r31, 0x6F	; 111
    15b2:	9f 2e       	mov	r9, r31
    15b4:	97 ff       	sbrs	r25, 7
    15b6:	09 c0       	rjmp	.+18     	; 0x15ca <vfprintf+0x50e>
    15b8:	90 95       	com	r25
    15ba:	80 95       	com	r24
    15bc:	70 95       	com	r23
    15be:	61 95       	neg	r22
    15c0:	7f 4f       	sbci	r23, 0xFF	; 255
    15c2:	8f 4f       	sbci	r24, 0xFF	; 255
    15c4:	9f 4f       	sbci	r25, 0xFF	; 255
    15c6:	f0 68       	ori	r31, 0x80	; 128
    15c8:	9f 2e       	mov	r9, r31
    15ca:	2a e0       	ldi	r18, 0x0A	; 10
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	a3 01       	movw	r20, r6
    15d0:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <__ultoa_invert>
    15d4:	c8 2e       	mov	r12, r24
    15d6:	c6 18       	sub	r12, r6
    15d8:	3f c0       	rjmp	.+126    	; 0x1658 <vfprintf+0x59c>
    15da:	09 2d       	mov	r16, r9
    15dc:	85 37       	cpi	r24, 0x75	; 117
    15de:	21 f4       	brne	.+8      	; 0x15e8 <vfprintf+0x52c>
    15e0:	0f 7e       	andi	r16, 0xEF	; 239
    15e2:	2a e0       	ldi	r18, 0x0A	; 10
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	1d c0       	rjmp	.+58     	; 0x1622 <vfprintf+0x566>
    15e8:	09 7f       	andi	r16, 0xF9	; 249
    15ea:	8f 36       	cpi	r24, 0x6F	; 111
    15ec:	91 f0       	breq	.+36     	; 0x1612 <vfprintf+0x556>
    15ee:	18 f4       	brcc	.+6      	; 0x15f6 <vfprintf+0x53a>
    15f0:	88 35       	cpi	r24, 0x58	; 88
    15f2:	59 f0       	breq	.+22     	; 0x160a <vfprintf+0x54e>
    15f4:	c3 c0       	rjmp	.+390    	; 0x177c <vfprintf+0x6c0>
    15f6:	80 37       	cpi	r24, 0x70	; 112
    15f8:	19 f0       	breq	.+6      	; 0x1600 <vfprintf+0x544>
    15fa:	88 37       	cpi	r24, 0x78	; 120
    15fc:	11 f0       	breq	.+4      	; 0x1602 <vfprintf+0x546>
    15fe:	be c0       	rjmp	.+380    	; 0x177c <vfprintf+0x6c0>
    1600:	00 61       	ori	r16, 0x10	; 16
    1602:	04 ff       	sbrs	r16, 4
    1604:	09 c0       	rjmp	.+18     	; 0x1618 <vfprintf+0x55c>
    1606:	04 60       	ori	r16, 0x04	; 4
    1608:	07 c0       	rjmp	.+14     	; 0x1618 <vfprintf+0x55c>
    160a:	94 fe       	sbrs	r9, 4
    160c:	08 c0       	rjmp	.+16     	; 0x161e <vfprintf+0x562>
    160e:	06 60       	ori	r16, 0x06	; 6
    1610:	06 c0       	rjmp	.+12     	; 0x161e <vfprintf+0x562>
    1612:	28 e0       	ldi	r18, 0x08	; 8
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	05 c0       	rjmp	.+10     	; 0x1622 <vfprintf+0x566>
    1618:	20 e1       	ldi	r18, 0x10	; 16
    161a:	30 e0       	ldi	r19, 0x00	; 0
    161c:	02 c0       	rjmp	.+4      	; 0x1622 <vfprintf+0x566>
    161e:	20 e1       	ldi	r18, 0x10	; 16
    1620:	32 e0       	ldi	r19, 0x02	; 2
    1622:	56 01       	movw	r10, r12
    1624:	07 ff       	sbrs	r16, 7
    1626:	09 c0       	rjmp	.+18     	; 0x163a <vfprintf+0x57e>
    1628:	84 e0       	ldi	r24, 0x04	; 4
    162a:	a8 0e       	add	r10, r24
    162c:	b1 1c       	adc	r11, r1
    162e:	f6 01       	movw	r30, r12
    1630:	60 81       	ld	r22, Z
    1632:	71 81       	ldd	r23, Z+1	; 0x01
    1634:	82 81       	ldd	r24, Z+2	; 0x02
    1636:	93 81       	ldd	r25, Z+3	; 0x03
    1638:	08 c0       	rjmp	.+16     	; 0x164a <vfprintf+0x58e>
    163a:	f2 e0       	ldi	r31, 0x02	; 2
    163c:	af 0e       	add	r10, r31
    163e:	b1 1c       	adc	r11, r1
    1640:	f6 01       	movw	r30, r12
    1642:	60 81       	ld	r22, Z
    1644:	71 81       	ldd	r23, Z+1	; 0x01
    1646:	80 e0       	ldi	r24, 0x00	; 0
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	a3 01       	movw	r20, r6
    164c:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <__ultoa_invert>
    1650:	c8 2e       	mov	r12, r24
    1652:	c6 18       	sub	r12, r6
    1654:	0f 77       	andi	r16, 0x7F	; 127
    1656:	90 2e       	mov	r9, r16
    1658:	96 fe       	sbrs	r9, 6
    165a:	0b c0       	rjmp	.+22     	; 0x1672 <vfprintf+0x5b6>
    165c:	09 2d       	mov	r16, r9
    165e:	0e 7f       	andi	r16, 0xFE	; 254
    1660:	c1 16       	cp	r12, r17
    1662:	50 f4       	brcc	.+20     	; 0x1678 <vfprintf+0x5bc>
    1664:	94 fe       	sbrs	r9, 4
    1666:	0a c0       	rjmp	.+20     	; 0x167c <vfprintf+0x5c0>
    1668:	92 fc       	sbrc	r9, 2
    166a:	08 c0       	rjmp	.+16     	; 0x167c <vfprintf+0x5c0>
    166c:	09 2d       	mov	r16, r9
    166e:	0e 7e       	andi	r16, 0xEE	; 238
    1670:	05 c0       	rjmp	.+10     	; 0x167c <vfprintf+0x5c0>
    1672:	dc 2c       	mov	r13, r12
    1674:	09 2d       	mov	r16, r9
    1676:	03 c0       	rjmp	.+6      	; 0x167e <vfprintf+0x5c2>
    1678:	dc 2c       	mov	r13, r12
    167a:	01 c0       	rjmp	.+2      	; 0x167e <vfprintf+0x5c2>
    167c:	d1 2e       	mov	r13, r17
    167e:	04 ff       	sbrs	r16, 4
    1680:	0d c0       	rjmp	.+26     	; 0x169c <vfprintf+0x5e0>
    1682:	fe 01       	movw	r30, r28
    1684:	ec 0d       	add	r30, r12
    1686:	f1 1d       	adc	r31, r1
    1688:	80 81       	ld	r24, Z
    168a:	80 33       	cpi	r24, 0x30	; 48
    168c:	11 f4       	brne	.+4      	; 0x1692 <vfprintf+0x5d6>
    168e:	09 7e       	andi	r16, 0xE9	; 233
    1690:	09 c0       	rjmp	.+18     	; 0x16a4 <vfprintf+0x5e8>
    1692:	02 ff       	sbrs	r16, 2
    1694:	06 c0       	rjmp	.+12     	; 0x16a2 <vfprintf+0x5e6>
    1696:	d3 94       	inc	r13
    1698:	d3 94       	inc	r13
    169a:	04 c0       	rjmp	.+8      	; 0x16a4 <vfprintf+0x5e8>
    169c:	80 2f       	mov	r24, r16
    169e:	86 78       	andi	r24, 0x86	; 134
    16a0:	09 f0       	breq	.+2      	; 0x16a4 <vfprintf+0x5e8>
    16a2:	d3 94       	inc	r13
    16a4:	03 fd       	sbrc	r16, 3
    16a6:	11 c0       	rjmp	.+34     	; 0x16ca <vfprintf+0x60e>
    16a8:	00 ff       	sbrs	r16, 0
    16aa:	06 c0       	rjmp	.+12     	; 0x16b8 <vfprintf+0x5fc>
    16ac:	1c 2d       	mov	r17, r12
    16ae:	d5 14       	cp	r13, r5
    16b0:	80 f4       	brcc	.+32     	; 0x16d2 <vfprintf+0x616>
    16b2:	15 0d       	add	r17, r5
    16b4:	1d 19       	sub	r17, r13
    16b6:	0d c0       	rjmp	.+26     	; 0x16d2 <vfprintf+0x616>
    16b8:	d5 14       	cp	r13, r5
    16ba:	58 f4       	brcc	.+22     	; 0x16d2 <vfprintf+0x616>
    16bc:	b7 01       	movw	r22, r14
    16be:	80 e2       	ldi	r24, 0x20	; 32
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    16c6:	d3 94       	inc	r13
    16c8:	f7 cf       	rjmp	.-18     	; 0x16b8 <vfprintf+0x5fc>
    16ca:	d5 14       	cp	r13, r5
    16cc:	10 f4       	brcc	.+4      	; 0x16d2 <vfprintf+0x616>
    16ce:	5d 18       	sub	r5, r13
    16d0:	01 c0       	rjmp	.+2      	; 0x16d4 <vfprintf+0x618>
    16d2:	51 2c       	mov	r5, r1
    16d4:	04 ff       	sbrs	r16, 4
    16d6:	10 c0       	rjmp	.+32     	; 0x16f8 <vfprintf+0x63c>
    16d8:	b7 01       	movw	r22, r14
    16da:	80 e3       	ldi	r24, 0x30	; 48
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    16e2:	02 ff       	sbrs	r16, 2
    16e4:	17 c0       	rjmp	.+46     	; 0x1714 <vfprintf+0x658>
    16e6:	01 fd       	sbrc	r16, 1
    16e8:	03 c0       	rjmp	.+6      	; 0x16f0 <vfprintf+0x634>
    16ea:	88 e7       	ldi	r24, 0x78	; 120
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	02 c0       	rjmp	.+4      	; 0x16f4 <vfprintf+0x638>
    16f0:	88 e5       	ldi	r24, 0x58	; 88
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	b7 01       	movw	r22, r14
    16f6:	0c c0       	rjmp	.+24     	; 0x1710 <vfprintf+0x654>
    16f8:	80 2f       	mov	r24, r16
    16fa:	86 78       	andi	r24, 0x86	; 134
    16fc:	59 f0       	breq	.+22     	; 0x1714 <vfprintf+0x658>
    16fe:	01 ff       	sbrs	r16, 1
    1700:	02 c0       	rjmp	.+4      	; 0x1706 <vfprintf+0x64a>
    1702:	8b e2       	ldi	r24, 0x2B	; 43
    1704:	01 c0       	rjmp	.+2      	; 0x1708 <vfprintf+0x64c>
    1706:	80 e2       	ldi	r24, 0x20	; 32
    1708:	07 fd       	sbrc	r16, 7
    170a:	8d e2       	ldi	r24, 0x2D	; 45
    170c:	b7 01       	movw	r22, r14
    170e:	90 e0       	ldi	r25, 0x00	; 0
    1710:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1714:	c1 16       	cp	r12, r17
    1716:	38 f4       	brcc	.+14     	; 0x1726 <vfprintf+0x66a>
    1718:	b7 01       	movw	r22, r14
    171a:	80 e3       	ldi	r24, 0x30	; 48
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1722:	11 50       	subi	r17, 0x01	; 1
    1724:	f7 cf       	rjmp	.-18     	; 0x1714 <vfprintf+0x658>
    1726:	ca 94       	dec	r12
    1728:	f3 01       	movw	r30, r6
    172a:	ec 0d       	add	r30, r12
    172c:	f1 1d       	adc	r31, r1
    172e:	80 81       	ld	r24, Z
    1730:	b7 01       	movw	r22, r14
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1738:	c1 10       	cpse	r12, r1
    173a:	f5 cf       	rjmp	.-22     	; 0x1726 <vfprintf+0x66a>
    173c:	15 c0       	rjmp	.+42     	; 0x1768 <vfprintf+0x6ac>
    173e:	f4 e0       	ldi	r31, 0x04	; 4
    1740:	f5 15       	cp	r31, r5
    1742:	60 f5       	brcc	.+88     	; 0x179c <vfprintf+0x6e0>
    1744:	84 e0       	ldi	r24, 0x04	; 4
    1746:	58 1a       	sub	r5, r24
    1748:	93 fe       	sbrs	r9, 3
    174a:	1f c0       	rjmp	.+62     	; 0x178a <vfprintf+0x6ce>
    174c:	01 11       	cpse	r16, r1
    174e:	27 c0       	rjmp	.+78     	; 0x179e <vfprintf+0x6e2>
    1750:	2c 85       	ldd	r18, Y+12	; 0x0c
    1752:	23 ff       	sbrs	r18, 3
    1754:	2a c0       	rjmp	.+84     	; 0x17aa <vfprintf+0x6ee>
    1756:	04 e0       	ldi	r16, 0x04	; 4
    1758:	12 e0       	ldi	r17, 0x02	; 2
    175a:	39 2d       	mov	r19, r9
    175c:	30 71       	andi	r19, 0x10	; 16
    175e:	93 2e       	mov	r9, r19
    1760:	f8 01       	movw	r30, r16
    1762:	84 91       	lpm	r24, Z
    1764:	81 11       	cpse	r24, r1
    1766:	24 c0       	rjmp	.+72     	; 0x17b0 <vfprintf+0x6f4>
    1768:	55 20       	and	r5, r5
    176a:	09 f4       	brne	.+2      	; 0x176e <vfprintf+0x6b2>
    176c:	e4 cc       	rjmp	.-1592   	; 0x1136 <vfprintf+0x7a>
    176e:	b7 01       	movw	r22, r14
    1770:	80 e2       	ldi	r24, 0x20	; 32
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1778:	5a 94       	dec	r5
    177a:	f6 cf       	rjmp	.-20     	; 0x1768 <vfprintf+0x6ac>
    177c:	f7 01       	movw	r30, r14
    177e:	86 81       	ldd	r24, Z+6	; 0x06
    1780:	97 81       	ldd	r25, Z+7	; 0x07
    1782:	26 c0       	rjmp	.+76     	; 0x17d0 <vfprintf+0x714>
    1784:	8f ef       	ldi	r24, 0xFF	; 255
    1786:	9f ef       	ldi	r25, 0xFF	; 255
    1788:	23 c0       	rjmp	.+70     	; 0x17d0 <vfprintf+0x714>
    178a:	b7 01       	movw	r22, r14
    178c:	80 e2       	ldi	r24, 0x20	; 32
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    1794:	5a 94       	dec	r5
    1796:	51 10       	cpse	r5, r1
    1798:	f8 cf       	rjmp	.-16     	; 0x178a <vfprintf+0x6ce>
    179a:	d8 cf       	rjmp	.-80     	; 0x174c <vfprintf+0x690>
    179c:	51 2c       	mov	r5, r1
    179e:	b7 01       	movw	r22, r14
    17a0:	80 2f       	mov	r24, r16
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    17a8:	d3 cf       	rjmp	.-90     	; 0x1750 <vfprintf+0x694>
    17aa:	08 e0       	ldi	r16, 0x08	; 8
    17ac:	12 e0       	ldi	r17, 0x02	; 2
    17ae:	d5 cf       	rjmp	.-86     	; 0x175a <vfprintf+0x69e>
    17b0:	91 10       	cpse	r9, r1
    17b2:	80 52       	subi	r24, 0x20	; 32
    17b4:	b7 01       	movw	r22, r14
    17b6:	90 e0       	ldi	r25, 0x00	; 0
    17b8:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <fputc>
    17bc:	0f 5f       	subi	r16, 0xFF	; 255
    17be:	1f 4f       	sbci	r17, 0xFF	; 255
    17c0:	cf cf       	rjmp	.-98     	; 0x1760 <vfprintf+0x6a4>
    17c2:	23 e0       	ldi	r18, 0x03	; 3
    17c4:	25 15       	cp	r18, r5
    17c6:	10 f4       	brcc	.+4      	; 0x17cc <vfprintf+0x710>
    17c8:	83 e0       	ldi	r24, 0x03	; 3
    17ca:	bd cf       	rjmp	.-134    	; 0x1746 <vfprintf+0x68a>
    17cc:	51 2c       	mov	r5, r1
    17ce:	c0 cf       	rjmp	.-128    	; 0x1750 <vfprintf+0x694>
    17d0:	60 96       	adiw	r28, 0x10	; 16
    17d2:	cd bf       	out	0x3d, r28	; 61
    17d4:	de bf       	out	0x3e, r29	; 62
    17d6:	df 91       	pop	r29
    17d8:	cf 91       	pop	r28
    17da:	1f 91       	pop	r17
    17dc:	0f 91       	pop	r16
    17de:	ff 90       	pop	r15
    17e0:	ef 90       	pop	r14
    17e2:	df 90       	pop	r13
    17e4:	cf 90       	pop	r12
    17e6:	bf 90       	pop	r11
    17e8:	af 90       	pop	r10
    17ea:	9f 90       	pop	r9
    17ec:	8f 90       	pop	r8
    17ee:	7f 90       	pop	r7
    17f0:	6f 90       	pop	r6
    17f2:	5f 90       	pop	r5
    17f4:	4f 90       	pop	r4
    17f6:	3f 90       	pop	r3
    17f8:	2f 90       	pop	r2
    17fa:	08 95       	ret

000017fc <__divmodhi4>:
    17fc:	97 fb       	bst	r25, 7
    17fe:	07 2e       	mov	r0, r23
    1800:	16 f4       	brtc	.+4      	; 0x1806 <__divmodhi4+0xa>
    1802:	00 94       	com	r0
    1804:	07 d0       	rcall	.+14     	; 0x1814 <__divmodhi4_neg1>
    1806:	77 fd       	sbrc	r23, 7
    1808:	09 d0       	rcall	.+18     	; 0x181c <__divmodhi4_neg2>
    180a:	0e 94 12 0c 	call	0x1824	; 0x1824 <__udivmodhi4>
    180e:	07 fc       	sbrc	r0, 7
    1810:	05 d0       	rcall	.+10     	; 0x181c <__divmodhi4_neg2>
    1812:	3e f4       	brtc	.+14     	; 0x1822 <__divmodhi4_exit>

00001814 <__divmodhi4_neg1>:
    1814:	90 95       	com	r25
    1816:	81 95       	neg	r24
    1818:	9f 4f       	sbci	r25, 0xFF	; 255
    181a:	08 95       	ret

0000181c <__divmodhi4_neg2>:
    181c:	70 95       	com	r23
    181e:	61 95       	neg	r22
    1820:	7f 4f       	sbci	r23, 0xFF	; 255

00001822 <__divmodhi4_exit>:
    1822:	08 95       	ret

00001824 <__udivmodhi4>:
    1824:	aa 1b       	sub	r26, r26
    1826:	bb 1b       	sub	r27, r27
    1828:	51 e1       	ldi	r21, 0x11	; 17
    182a:	07 c0       	rjmp	.+14     	; 0x183a <__udivmodhi4_ep>

0000182c <__udivmodhi4_loop>:
    182c:	aa 1f       	adc	r26, r26
    182e:	bb 1f       	adc	r27, r27
    1830:	a6 17       	cp	r26, r22
    1832:	b7 07       	cpc	r27, r23
    1834:	10 f0       	brcs	.+4      	; 0x183a <__udivmodhi4_ep>
    1836:	a6 1b       	sub	r26, r22
    1838:	b7 0b       	sbc	r27, r23

0000183a <__udivmodhi4_ep>:
    183a:	88 1f       	adc	r24, r24
    183c:	99 1f       	adc	r25, r25
    183e:	5a 95       	dec	r21
    1840:	a9 f7       	brne	.-22     	; 0x182c <__udivmodhi4_loop>
    1842:	80 95       	com	r24
    1844:	90 95       	com	r25
    1846:	bc 01       	movw	r22, r24
    1848:	cd 01       	movw	r24, r26
    184a:	08 95       	ret

0000184c <__ftoa_engine>:
    184c:	28 30       	cpi	r18, 0x08	; 8
    184e:	08 f0       	brcs	.+2      	; 0x1852 <__ftoa_engine+0x6>
    1850:	27 e0       	ldi	r18, 0x07	; 7
    1852:	33 27       	eor	r19, r19
    1854:	da 01       	movw	r26, r20
    1856:	99 0f       	add	r25, r25
    1858:	31 1d       	adc	r19, r1
    185a:	87 fd       	sbrc	r24, 7
    185c:	91 60       	ori	r25, 0x01	; 1
    185e:	00 96       	adiw	r24, 0x00	; 0
    1860:	61 05       	cpc	r22, r1
    1862:	71 05       	cpc	r23, r1
    1864:	39 f4       	brne	.+14     	; 0x1874 <__ftoa_engine+0x28>
    1866:	32 60       	ori	r19, 0x02	; 2
    1868:	2e 5f       	subi	r18, 0xFE	; 254
    186a:	3d 93       	st	X+, r19
    186c:	30 e3       	ldi	r19, 0x30	; 48
    186e:	2a 95       	dec	r18
    1870:	e1 f7       	brne	.-8      	; 0x186a <__ftoa_engine+0x1e>
    1872:	08 95       	ret
    1874:	9f 3f       	cpi	r25, 0xFF	; 255
    1876:	30 f0       	brcs	.+12     	; 0x1884 <__ftoa_engine+0x38>
    1878:	80 38       	cpi	r24, 0x80	; 128
    187a:	71 05       	cpc	r23, r1
    187c:	61 05       	cpc	r22, r1
    187e:	09 f0       	breq	.+2      	; 0x1882 <__ftoa_engine+0x36>
    1880:	3c 5f       	subi	r19, 0xFC	; 252
    1882:	3c 5f       	subi	r19, 0xFC	; 252
    1884:	3d 93       	st	X+, r19
    1886:	91 30       	cpi	r25, 0x01	; 1
    1888:	08 f0       	brcs	.+2      	; 0x188c <__ftoa_engine+0x40>
    188a:	80 68       	ori	r24, 0x80	; 128
    188c:	91 1d       	adc	r25, r1
    188e:	df 93       	push	r29
    1890:	cf 93       	push	r28
    1892:	1f 93       	push	r17
    1894:	0f 93       	push	r16
    1896:	ff 92       	push	r15
    1898:	ef 92       	push	r14
    189a:	19 2f       	mov	r17, r25
    189c:	98 7f       	andi	r25, 0xF8	; 248
    189e:	96 95       	lsr	r25
    18a0:	e9 2f       	mov	r30, r25
    18a2:	96 95       	lsr	r25
    18a4:	96 95       	lsr	r25
    18a6:	e9 0f       	add	r30, r25
    18a8:	ff 27       	eor	r31, r31
    18aa:	ea 59       	subi	r30, 0x9A	; 154
    18ac:	fd 4f       	sbci	r31, 0xFD	; 253
    18ae:	99 27       	eor	r25, r25
    18b0:	33 27       	eor	r19, r19
    18b2:	ee 24       	eor	r14, r14
    18b4:	ff 24       	eor	r15, r15
    18b6:	a7 01       	movw	r20, r14
    18b8:	e7 01       	movw	r28, r14
    18ba:	05 90       	lpm	r0, Z+
    18bc:	08 94       	sec
    18be:	07 94       	ror	r0
    18c0:	28 f4       	brcc	.+10     	; 0x18cc <__ftoa_engine+0x80>
    18c2:	36 0f       	add	r19, r22
    18c4:	e7 1e       	adc	r14, r23
    18c6:	f8 1e       	adc	r15, r24
    18c8:	49 1f       	adc	r20, r25
    18ca:	51 1d       	adc	r21, r1
    18cc:	66 0f       	add	r22, r22
    18ce:	77 1f       	adc	r23, r23
    18d0:	88 1f       	adc	r24, r24
    18d2:	99 1f       	adc	r25, r25
    18d4:	06 94       	lsr	r0
    18d6:	a1 f7       	brne	.-24     	; 0x18c0 <__ftoa_engine+0x74>
    18d8:	05 90       	lpm	r0, Z+
    18da:	07 94       	ror	r0
    18dc:	28 f4       	brcc	.+10     	; 0x18e8 <__ftoa_engine+0x9c>
    18de:	e7 0e       	add	r14, r23
    18e0:	f8 1e       	adc	r15, r24
    18e2:	49 1f       	adc	r20, r25
    18e4:	56 1f       	adc	r21, r22
    18e6:	c1 1d       	adc	r28, r1
    18e8:	77 0f       	add	r23, r23
    18ea:	88 1f       	adc	r24, r24
    18ec:	99 1f       	adc	r25, r25
    18ee:	66 1f       	adc	r22, r22
    18f0:	06 94       	lsr	r0
    18f2:	a1 f7       	brne	.-24     	; 0x18dc <__ftoa_engine+0x90>
    18f4:	05 90       	lpm	r0, Z+
    18f6:	07 94       	ror	r0
    18f8:	28 f4       	brcc	.+10     	; 0x1904 <__ftoa_engine+0xb8>
    18fa:	f8 0e       	add	r15, r24
    18fc:	49 1f       	adc	r20, r25
    18fe:	56 1f       	adc	r21, r22
    1900:	c7 1f       	adc	r28, r23
    1902:	d1 1d       	adc	r29, r1
    1904:	88 0f       	add	r24, r24
    1906:	99 1f       	adc	r25, r25
    1908:	66 1f       	adc	r22, r22
    190a:	77 1f       	adc	r23, r23
    190c:	06 94       	lsr	r0
    190e:	a1 f7       	brne	.-24     	; 0x18f8 <__ftoa_engine+0xac>
    1910:	05 90       	lpm	r0, Z+
    1912:	07 94       	ror	r0
    1914:	20 f4       	brcc	.+8      	; 0x191e <__ftoa_engine+0xd2>
    1916:	49 0f       	add	r20, r25
    1918:	56 1f       	adc	r21, r22
    191a:	c7 1f       	adc	r28, r23
    191c:	d8 1f       	adc	r29, r24
    191e:	99 0f       	add	r25, r25
    1920:	66 1f       	adc	r22, r22
    1922:	77 1f       	adc	r23, r23
    1924:	88 1f       	adc	r24, r24
    1926:	06 94       	lsr	r0
    1928:	a9 f7       	brne	.-22     	; 0x1914 <__ftoa_engine+0xc8>
    192a:	84 91       	lpm	r24, Z
    192c:	10 95       	com	r17
    192e:	17 70       	andi	r17, 0x07	; 7
    1930:	41 f0       	breq	.+16     	; 0x1942 <__ftoa_engine+0xf6>
    1932:	d6 95       	lsr	r29
    1934:	c7 95       	ror	r28
    1936:	57 95       	ror	r21
    1938:	47 95       	ror	r20
    193a:	f7 94       	ror	r15
    193c:	e7 94       	ror	r14
    193e:	1a 95       	dec	r17
    1940:	c1 f7       	brne	.-16     	; 0x1932 <__ftoa_engine+0xe6>
    1942:	ec e0       	ldi	r30, 0x0C	; 12
    1944:	f2 e0       	ldi	r31, 0x02	; 2
    1946:	68 94       	set
    1948:	15 90       	lpm	r1, Z+
    194a:	15 91       	lpm	r17, Z+
    194c:	35 91       	lpm	r19, Z+
    194e:	65 91       	lpm	r22, Z+
    1950:	95 91       	lpm	r25, Z+
    1952:	05 90       	lpm	r0, Z+
    1954:	7f e2       	ldi	r23, 0x2F	; 47
    1956:	73 95       	inc	r23
    1958:	e1 18       	sub	r14, r1
    195a:	f1 0a       	sbc	r15, r17
    195c:	43 0b       	sbc	r20, r19
    195e:	56 0b       	sbc	r21, r22
    1960:	c9 0b       	sbc	r28, r25
    1962:	d0 09       	sbc	r29, r0
    1964:	c0 f7       	brcc	.-16     	; 0x1956 <__ftoa_engine+0x10a>
    1966:	e1 0c       	add	r14, r1
    1968:	f1 1e       	adc	r15, r17
    196a:	43 1f       	adc	r20, r19
    196c:	56 1f       	adc	r21, r22
    196e:	c9 1f       	adc	r28, r25
    1970:	d0 1d       	adc	r29, r0
    1972:	7e f4       	brtc	.+30     	; 0x1992 <__ftoa_engine+0x146>
    1974:	70 33       	cpi	r23, 0x30	; 48
    1976:	11 f4       	brne	.+4      	; 0x197c <__ftoa_engine+0x130>
    1978:	8a 95       	dec	r24
    197a:	e6 cf       	rjmp	.-52     	; 0x1948 <__ftoa_engine+0xfc>
    197c:	e8 94       	clt
    197e:	01 50       	subi	r16, 0x01	; 1
    1980:	30 f0       	brcs	.+12     	; 0x198e <__ftoa_engine+0x142>
    1982:	08 0f       	add	r16, r24
    1984:	0a f4       	brpl	.+2      	; 0x1988 <__ftoa_engine+0x13c>
    1986:	00 27       	eor	r16, r16
    1988:	02 17       	cp	r16, r18
    198a:	08 f4       	brcc	.+2      	; 0x198e <__ftoa_engine+0x142>
    198c:	20 2f       	mov	r18, r16
    198e:	23 95       	inc	r18
    1990:	02 2f       	mov	r16, r18
    1992:	7a 33       	cpi	r23, 0x3A	; 58
    1994:	28 f0       	brcs	.+10     	; 0x19a0 <__ftoa_engine+0x154>
    1996:	79 e3       	ldi	r23, 0x39	; 57
    1998:	7d 93       	st	X+, r23
    199a:	2a 95       	dec	r18
    199c:	e9 f7       	brne	.-6      	; 0x1998 <__ftoa_engine+0x14c>
    199e:	10 c0       	rjmp	.+32     	; 0x19c0 <__ftoa_engine+0x174>
    19a0:	7d 93       	st	X+, r23
    19a2:	2a 95       	dec	r18
    19a4:	89 f6       	brne	.-94     	; 0x1948 <__ftoa_engine+0xfc>
    19a6:	06 94       	lsr	r0
    19a8:	97 95       	ror	r25
    19aa:	67 95       	ror	r22
    19ac:	37 95       	ror	r19
    19ae:	17 95       	ror	r17
    19b0:	17 94       	ror	r1
    19b2:	e1 18       	sub	r14, r1
    19b4:	f1 0a       	sbc	r15, r17
    19b6:	43 0b       	sbc	r20, r19
    19b8:	56 0b       	sbc	r21, r22
    19ba:	c9 0b       	sbc	r28, r25
    19bc:	d0 09       	sbc	r29, r0
    19be:	98 f0       	brcs	.+38     	; 0x19e6 <__ftoa_engine+0x19a>
    19c0:	23 95       	inc	r18
    19c2:	7e 91       	ld	r23, -X
    19c4:	73 95       	inc	r23
    19c6:	7a 33       	cpi	r23, 0x3A	; 58
    19c8:	08 f0       	brcs	.+2      	; 0x19cc <__ftoa_engine+0x180>
    19ca:	70 e3       	ldi	r23, 0x30	; 48
    19cc:	7c 93       	st	X, r23
    19ce:	20 13       	cpse	r18, r16
    19d0:	b8 f7       	brcc	.-18     	; 0x19c0 <__ftoa_engine+0x174>
    19d2:	7e 91       	ld	r23, -X
    19d4:	70 61       	ori	r23, 0x10	; 16
    19d6:	7d 93       	st	X+, r23
    19d8:	30 f0       	brcs	.+12     	; 0x19e6 <__ftoa_engine+0x19a>
    19da:	83 95       	inc	r24
    19dc:	71 e3       	ldi	r23, 0x31	; 49
    19de:	7d 93       	st	X+, r23
    19e0:	70 e3       	ldi	r23, 0x30	; 48
    19e2:	2a 95       	dec	r18
    19e4:	e1 f7       	brne	.-8      	; 0x19de <__ftoa_engine+0x192>
    19e6:	11 24       	eor	r1, r1
    19e8:	ef 90       	pop	r14
    19ea:	ff 90       	pop	r15
    19ec:	0f 91       	pop	r16
    19ee:	1f 91       	pop	r17
    19f0:	cf 91       	pop	r28
    19f2:	df 91       	pop	r29
    19f4:	99 27       	eor	r25, r25
    19f6:	87 fd       	sbrc	r24, 7
    19f8:	90 95       	com	r25
    19fa:	08 95       	ret

000019fc <strnlen_P>:
    19fc:	fc 01       	movw	r30, r24
    19fe:	05 90       	lpm	r0, Z+
    1a00:	61 50       	subi	r22, 0x01	; 1
    1a02:	70 40       	sbci	r23, 0x00	; 0
    1a04:	01 10       	cpse	r0, r1
    1a06:	d8 f7       	brcc	.-10     	; 0x19fe <strnlen_P+0x2>
    1a08:	80 95       	com	r24
    1a0a:	90 95       	com	r25
    1a0c:	8e 0f       	add	r24, r30
    1a0e:	9f 1f       	adc	r25, r31
    1a10:	08 95       	ret

00001a12 <strnlen>:
    1a12:	fc 01       	movw	r30, r24
    1a14:	61 50       	subi	r22, 0x01	; 1
    1a16:	70 40       	sbci	r23, 0x00	; 0
    1a18:	01 90       	ld	r0, Z+
    1a1a:	01 10       	cpse	r0, r1
    1a1c:	d8 f7       	brcc	.-10     	; 0x1a14 <strnlen+0x2>
    1a1e:	80 95       	com	r24
    1a20:	90 95       	com	r25
    1a22:	8e 0f       	add	r24, r30
    1a24:	9f 1f       	adc	r25, r31
    1a26:	08 95       	ret

00001a28 <fputc>:
    1a28:	0f 93       	push	r16
    1a2a:	1f 93       	push	r17
    1a2c:	cf 93       	push	r28
    1a2e:	df 93       	push	r29
    1a30:	fb 01       	movw	r30, r22
    1a32:	23 81       	ldd	r18, Z+3	; 0x03
    1a34:	21 fd       	sbrc	r18, 1
    1a36:	03 c0       	rjmp	.+6      	; 0x1a3e <fputc+0x16>
    1a38:	8f ef       	ldi	r24, 0xFF	; 255
    1a3a:	9f ef       	ldi	r25, 0xFF	; 255
    1a3c:	2c c0       	rjmp	.+88     	; 0x1a96 <fputc+0x6e>
    1a3e:	22 ff       	sbrs	r18, 2
    1a40:	16 c0       	rjmp	.+44     	; 0x1a6e <fputc+0x46>
    1a42:	46 81       	ldd	r20, Z+6	; 0x06
    1a44:	57 81       	ldd	r21, Z+7	; 0x07
    1a46:	24 81       	ldd	r18, Z+4	; 0x04
    1a48:	35 81       	ldd	r19, Z+5	; 0x05
    1a4a:	42 17       	cp	r20, r18
    1a4c:	53 07       	cpc	r21, r19
    1a4e:	44 f4       	brge	.+16     	; 0x1a60 <fputc+0x38>
    1a50:	a0 81       	ld	r26, Z
    1a52:	b1 81       	ldd	r27, Z+1	; 0x01
    1a54:	9d 01       	movw	r18, r26
    1a56:	2f 5f       	subi	r18, 0xFF	; 255
    1a58:	3f 4f       	sbci	r19, 0xFF	; 255
    1a5a:	20 83       	st	Z, r18
    1a5c:	31 83       	std	Z+1, r19	; 0x01
    1a5e:	8c 93       	st	X, r24
    1a60:	26 81       	ldd	r18, Z+6	; 0x06
    1a62:	37 81       	ldd	r19, Z+7	; 0x07
    1a64:	2f 5f       	subi	r18, 0xFF	; 255
    1a66:	3f 4f       	sbci	r19, 0xFF	; 255
    1a68:	26 83       	std	Z+6, r18	; 0x06
    1a6a:	37 83       	std	Z+7, r19	; 0x07
    1a6c:	14 c0       	rjmp	.+40     	; 0x1a96 <fputc+0x6e>
    1a6e:	8b 01       	movw	r16, r22
    1a70:	ec 01       	movw	r28, r24
    1a72:	fb 01       	movw	r30, r22
    1a74:	00 84       	ldd	r0, Z+8	; 0x08
    1a76:	f1 85       	ldd	r31, Z+9	; 0x09
    1a78:	e0 2d       	mov	r30, r0
    1a7a:	19 95       	eicall
    1a7c:	89 2b       	or	r24, r25
    1a7e:	e1 f6       	brne	.-72     	; 0x1a38 <fputc+0x10>
    1a80:	d8 01       	movw	r26, r16
    1a82:	16 96       	adiw	r26, 0x06	; 6
    1a84:	8d 91       	ld	r24, X+
    1a86:	9c 91       	ld	r25, X
    1a88:	17 97       	sbiw	r26, 0x07	; 7
    1a8a:	01 96       	adiw	r24, 0x01	; 1
    1a8c:	16 96       	adiw	r26, 0x06	; 6
    1a8e:	8d 93       	st	X+, r24
    1a90:	9c 93       	st	X, r25
    1a92:	17 97       	sbiw	r26, 0x07	; 7
    1a94:	ce 01       	movw	r24, r28
    1a96:	df 91       	pop	r29
    1a98:	cf 91       	pop	r28
    1a9a:	1f 91       	pop	r17
    1a9c:	0f 91       	pop	r16
    1a9e:	08 95       	ret

00001aa0 <printf>:
    1aa0:	cf 93       	push	r28
    1aa2:	df 93       	push	r29
    1aa4:	cd b7       	in	r28, 0x3d	; 61
    1aa6:	de b7       	in	r29, 0x3e	; 62
    1aa8:	ae 01       	movw	r20, r28
    1aaa:	4a 5f       	subi	r20, 0xFA	; 250
    1aac:	5f 4f       	sbci	r21, 0xFF	; 255
    1aae:	fa 01       	movw	r30, r20
    1ab0:	61 91       	ld	r22, Z+
    1ab2:	71 91       	ld	r23, Z+
    1ab4:	af 01       	movw	r20, r30
    1ab6:	80 91 68 21 	lds	r24, 0x2168	; 0x802168 <__iob+0x2>
    1aba:	90 91 69 21 	lds	r25, 0x2169	; 0x802169 <__iob+0x3>
    1abe:	0e 94 5e 08 	call	0x10bc	; 0x10bc <vfprintf>
    1ac2:	df 91       	pop	r29
    1ac4:	cf 91       	pop	r28
    1ac6:	08 95       	ret

00001ac8 <puts>:
    1ac8:	0f 93       	push	r16
    1aca:	1f 93       	push	r17
    1acc:	cf 93       	push	r28
    1ace:	df 93       	push	r29
    1ad0:	e0 91 68 21 	lds	r30, 0x2168	; 0x802168 <__iob+0x2>
    1ad4:	f0 91 69 21 	lds	r31, 0x2169	; 0x802169 <__iob+0x3>
    1ad8:	23 81       	ldd	r18, Z+3	; 0x03
    1ada:	21 ff       	sbrs	r18, 1
    1adc:	1b c0       	rjmp	.+54     	; 0x1b14 <puts+0x4c>
    1ade:	8c 01       	movw	r16, r24
    1ae0:	d0 e0       	ldi	r29, 0x00	; 0
    1ae2:	c0 e0       	ldi	r28, 0x00	; 0
    1ae4:	f8 01       	movw	r30, r16
    1ae6:	81 91       	ld	r24, Z+
    1ae8:	8f 01       	movw	r16, r30
    1aea:	60 91 68 21 	lds	r22, 0x2168	; 0x802168 <__iob+0x2>
    1aee:	70 91 69 21 	lds	r23, 0x2169	; 0x802169 <__iob+0x3>
    1af2:	db 01       	movw	r26, r22
    1af4:	18 96       	adiw	r26, 0x08	; 8
    1af6:	ed 91       	ld	r30, X+
    1af8:	fc 91       	ld	r31, X
    1afa:	19 97       	sbiw	r26, 0x09	; 9
    1afc:	88 23       	and	r24, r24
    1afe:	31 f0       	breq	.+12     	; 0x1b0c <puts+0x44>
    1b00:	19 95       	eicall
    1b02:	89 2b       	or	r24, r25
    1b04:	79 f3       	breq	.-34     	; 0x1ae4 <puts+0x1c>
    1b06:	df ef       	ldi	r29, 0xFF	; 255
    1b08:	cf ef       	ldi	r28, 0xFF	; 255
    1b0a:	ec cf       	rjmp	.-40     	; 0x1ae4 <puts+0x1c>
    1b0c:	8a e0       	ldi	r24, 0x0A	; 10
    1b0e:	19 95       	eicall
    1b10:	89 2b       	or	r24, r25
    1b12:	19 f0       	breq	.+6      	; 0x1b1a <puts+0x52>
    1b14:	8f ef       	ldi	r24, 0xFF	; 255
    1b16:	9f ef       	ldi	r25, 0xFF	; 255
    1b18:	02 c0       	rjmp	.+4      	; 0x1b1e <puts+0x56>
    1b1a:	8d 2f       	mov	r24, r29
    1b1c:	9c 2f       	mov	r25, r28
    1b1e:	df 91       	pop	r29
    1b20:	cf 91       	pop	r28
    1b22:	1f 91       	pop	r17
    1b24:	0f 91       	pop	r16
    1b26:	08 95       	ret

00001b28 <__ultoa_invert>:
    1b28:	fa 01       	movw	r30, r20
    1b2a:	aa 27       	eor	r26, r26
    1b2c:	28 30       	cpi	r18, 0x08	; 8
    1b2e:	51 f1       	breq	.+84     	; 0x1b84 <__ultoa_invert+0x5c>
    1b30:	20 31       	cpi	r18, 0x10	; 16
    1b32:	81 f1       	breq	.+96     	; 0x1b94 <__ultoa_invert+0x6c>
    1b34:	e8 94       	clt
    1b36:	6f 93       	push	r22
    1b38:	6e 7f       	andi	r22, 0xFE	; 254
    1b3a:	6e 5f       	subi	r22, 0xFE	; 254
    1b3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b3e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b40:	9f 4f       	sbci	r25, 0xFF	; 255
    1b42:	af 4f       	sbci	r26, 0xFF	; 255
    1b44:	b1 e0       	ldi	r27, 0x01	; 1
    1b46:	3e d0       	rcall	.+124    	; 0x1bc4 <__ultoa_invert+0x9c>
    1b48:	b4 e0       	ldi	r27, 0x04	; 4
    1b4a:	3c d0       	rcall	.+120    	; 0x1bc4 <__ultoa_invert+0x9c>
    1b4c:	67 0f       	add	r22, r23
    1b4e:	78 1f       	adc	r23, r24
    1b50:	89 1f       	adc	r24, r25
    1b52:	9a 1f       	adc	r25, r26
    1b54:	a1 1d       	adc	r26, r1
    1b56:	68 0f       	add	r22, r24
    1b58:	79 1f       	adc	r23, r25
    1b5a:	8a 1f       	adc	r24, r26
    1b5c:	91 1d       	adc	r25, r1
    1b5e:	a1 1d       	adc	r26, r1
    1b60:	6a 0f       	add	r22, r26
    1b62:	71 1d       	adc	r23, r1
    1b64:	81 1d       	adc	r24, r1
    1b66:	91 1d       	adc	r25, r1
    1b68:	a1 1d       	adc	r26, r1
    1b6a:	20 d0       	rcall	.+64     	; 0x1bac <__ultoa_invert+0x84>
    1b6c:	09 f4       	brne	.+2      	; 0x1b70 <__ultoa_invert+0x48>
    1b6e:	68 94       	set
    1b70:	3f 91       	pop	r19
    1b72:	2a e0       	ldi	r18, 0x0A	; 10
    1b74:	26 9f       	mul	r18, r22
    1b76:	11 24       	eor	r1, r1
    1b78:	30 19       	sub	r19, r0
    1b7a:	30 5d       	subi	r19, 0xD0	; 208
    1b7c:	31 93       	st	Z+, r19
    1b7e:	de f6       	brtc	.-74     	; 0x1b36 <__ultoa_invert+0xe>
    1b80:	cf 01       	movw	r24, r30
    1b82:	08 95       	ret
    1b84:	46 2f       	mov	r20, r22
    1b86:	47 70       	andi	r20, 0x07	; 7
    1b88:	40 5d       	subi	r20, 0xD0	; 208
    1b8a:	41 93       	st	Z+, r20
    1b8c:	b3 e0       	ldi	r27, 0x03	; 3
    1b8e:	0f d0       	rcall	.+30     	; 0x1bae <__ultoa_invert+0x86>
    1b90:	c9 f7       	brne	.-14     	; 0x1b84 <__ultoa_invert+0x5c>
    1b92:	f6 cf       	rjmp	.-20     	; 0x1b80 <__ultoa_invert+0x58>
    1b94:	46 2f       	mov	r20, r22
    1b96:	4f 70       	andi	r20, 0x0F	; 15
    1b98:	40 5d       	subi	r20, 0xD0	; 208
    1b9a:	4a 33       	cpi	r20, 0x3A	; 58
    1b9c:	18 f0       	brcs	.+6      	; 0x1ba4 <__ultoa_invert+0x7c>
    1b9e:	49 5d       	subi	r20, 0xD9	; 217
    1ba0:	31 fd       	sbrc	r19, 1
    1ba2:	40 52       	subi	r20, 0x20	; 32
    1ba4:	41 93       	st	Z+, r20
    1ba6:	02 d0       	rcall	.+4      	; 0x1bac <__ultoa_invert+0x84>
    1ba8:	a9 f7       	brne	.-22     	; 0x1b94 <__ultoa_invert+0x6c>
    1baa:	ea cf       	rjmp	.-44     	; 0x1b80 <__ultoa_invert+0x58>
    1bac:	b4 e0       	ldi	r27, 0x04	; 4
    1bae:	a6 95       	lsr	r26
    1bb0:	97 95       	ror	r25
    1bb2:	87 95       	ror	r24
    1bb4:	77 95       	ror	r23
    1bb6:	67 95       	ror	r22
    1bb8:	ba 95       	dec	r27
    1bba:	c9 f7       	brne	.-14     	; 0x1bae <__ultoa_invert+0x86>
    1bbc:	00 97       	sbiw	r24, 0x00	; 0
    1bbe:	61 05       	cpc	r22, r1
    1bc0:	71 05       	cpc	r23, r1
    1bc2:	08 95       	ret
    1bc4:	9b 01       	movw	r18, r22
    1bc6:	ac 01       	movw	r20, r24
    1bc8:	0a 2e       	mov	r0, r26
    1bca:	06 94       	lsr	r0
    1bcc:	57 95       	ror	r21
    1bce:	47 95       	ror	r20
    1bd0:	37 95       	ror	r19
    1bd2:	27 95       	ror	r18
    1bd4:	ba 95       	dec	r27
    1bd6:	c9 f7       	brne	.-14     	; 0x1bca <__ultoa_invert+0xa2>
    1bd8:	62 0f       	add	r22, r18
    1bda:	73 1f       	adc	r23, r19
    1bdc:	84 1f       	adc	r24, r20
    1bde:	95 1f       	adc	r25, r21
    1be0:	a0 1d       	adc	r26, r0
    1be2:	08 95       	ret

00001be4 <_exit>:
    1be4:	f8 94       	cli

00001be6 <__stop_program>:
    1be6:	ff cf       	rjmp	.-2      	; 0x1be6 <__stop_program>
